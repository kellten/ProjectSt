<?xml version="1.0"?>
<doc>
<assembly>
<name>
PaikRichStock.Common
</name>
</assembly>
<members>
<member name="M:PaikRichStock.Common.clsScreenNoManage.ReceiveFavScreenNo(PaikRichStock.Common.clsScreenNoManage.StockIdIndex,System.String)">
	<summary>
 관심종목의 화면번호를 만든다.
 </summary>
	<param name="stockId"></param>
	<param name="favId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.Tech_TypicalPrice.Fn_PeriodLowestMA(System.Int32,System.Data.DataSet,System.String,System.String,System.String)">
	<summary>
 기간별 최저가 및 저가 + 종가 /2 의 이동평균값을 가져온다.
 </summary>
	<param name="period"></param>
	<param name="ds"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:PaikRichStock.Common.ModStatus.LoginStatus">
	<summary>
 로그인 상태 값 - Connect : 0, DisConnect : 1
 </summary>
	<remarks></remarks>
</member><member name="T:PaikRichStock.Common.ModStatus.LoginSucessStatus">
	<summary>
 로그인 이벤트 값 - Success : 0, Fail : 1
 </summary>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.CDateTime.IsTime(System.String,System.Boolean)">
	<summary>
 입력문자열이 시간형이 맞는지 체크한다.
 </summary>
	<param name="MyTime">hh:mm:ss or hh:mm</param>
	<param name="blnHr24">True이면 24:00을 인정 False이면 23:59까지만 인정</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.CDateTime.IsDateF(System.String)">
	<summary>
 입력문자열이 날짜형식으로 변환가능한지 체크한다.
 </summary>
	<param name="dateType">yyyy/MM/dd or yyyyMMdd</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:PaikRichStock.Common.My.Resources.Resources.ResourceManager">
	<summary>
  이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
</summary>
</member><member name="P:PaikRichStock.Common.My.Resources.Resources.Culture">
	<summary>
  이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
  속성을 재정의합니다.
</summary>
</member><member name="T:PaikRichStock.Common.My.Resources.Resources">
	<summary>
  지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
</summary>
</member><member name="E:PaikRichStock.Common.ucMainStock.OnConnection">
	<summary>
 접속 정보
 </summary>
	<param name="status"></param>
	<remarks></remarks>
</member><member name="E:PaikRichStock.Common.ucMainStock.OnDsBaseInfo">
	<summary>
 종목 기본 정도에 대한 Event
 </summary>
	<param name="ds"></param>
	<remarks></remarks>
</member><member name="E:PaikRichStock.Common.ucMainStock.OnDayDsBaseInfo">
	<summary>
 일봉 차트 정보에 대한 Event
 </summary>
	<param name="ds"></param>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.ucMainStock.Connection">
	<summary>
 C:\Kiwoom\KiwoomFlash2\khministarter.exe 를 통해 접속한다.
 </summary>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.ucMainStock.AxKH_OnEventConnect(System.Object,AxKHOpenAPILib._DKHOpenAPIEvents_OnEventConnectEvent)">
	<summary>
 통신 연결 상태 변경시 이벤트
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.ucMainStock.AxKH_OnReceiveConditionVer(System.Object,AxKHOpenAPILib._DKHOpenAPIEvents_OnReceiveConditionVerEvent)">
 로컬에 사용자조건식 저장 성공여부 응답 이벤트

</member><member name="M:PaikRichStock.Common.ucMainStock.AxKH_OnReceiveTrCondition(System.Object,AxKHOpenAPILib._DKHOpenAPIEvents_OnReceiveTrConditionEvent)">
 조건검색 조회응답 이벤트

</member><member name="M:PaikRichStock.Common.ucMainStock.AxKH_OnReceiveTrData(System.Object,AxKHOpenAPILib._DKHOpenAPIEvents_OnReceiveTrDataEvent)">
 Tran 수신시 이벤트(OnReceiveTrData)

</member><member name="M:PaikRichStock.Common.ucMainStock.SetStockBaseInfo(AxKHOpenAPILib._DKHOpenAPIEvents_OnReceiveTrDataEvent)">
	<summary>
 주식기본정보
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.ucMainStock.SetDayStockBaseInfo(AxKHOpenAPILib._DKHOpenAPIEvents_OnReceiveTrDataEvent)">
	<summary>
 주식일봉차트조회
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.ucMainStock.SetTradePortInfo(AxKHOpenAPILib._DKHOpenAPIEvents_OnReceiveTrDataEvent)">
	<summary>
 기준일 거래원 가져온다.
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.ucMainStock.GetUserConditionStockLoad(System.String,System.String,System.String,System.Int32)">
	<summary>
 조건 검색 수신
 </summary>
	<param name="screenNo"></param>
	<param name="conditionName"></param>
	<param name="conditionNo"></param>
	<param name="searchType"> 0 - 조건검색 1 - 실시간 </param>
	<remarks></remarks>
</member><member name="P:PaikRichStock.Common.clsFunc.bEditMode">
	<summary>
 컨트롤의 값 변경이 있었는지 체크 (변경시 :True)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.clsFunc.IsEditMode(System.Windows.Forms.UserControl)">
	<summary>
 화면에 컨트롤의 값이 변경이 있었는지 체크하는 함수
 </summary>
	<param name="ucForm"></param>
	<remarks></remarks>
</member><member name="M:PaikRichStock.Common.clsFunc.IsEditMode(System.Windows.Forms.Form)">
	<summary>
 화면에 컨트롤의 값이 변경이 있었는지 체크하는 함수
 </summary>
	<param name="ucForm"></param>
	<remarks></remarks>
</member><member name="F:PaikRichStock.Common.clsKiwoomDefine.Opt10001">
	<summary>
 [ opt10001 : 주식기본정보요청 ]
 </summary>
	<remarks>
 1. Open API 조회 함수 입력값을 설정합니다.
 종목코드 = 전문 조회할 종목코드
 SetInputValue("종목코드"	,  "입력값 1");
 2. Open API 조회 함수를 호출해서 전문을 서버로 전송합니다.
 CommRqData( "RQName"	,  "opt10001"	,  "0"	,  "화면번호"); 
 </remarks>
</member><member name="F:PaikRichStock.Common.clsKiwoomDefine.Opt10002">
	<summary>
  [ OPT10002 : 주식거래원요청 ]
 </summary>
	<remarks>
  1. Open API 조회 함수 입력값을 설정합니다.
 종목코드 = 전문 조회할 종목코드
 SetInputValue("종목코드"	,  "입력값 1");
  2. Open API 조회 함수를 호출해서 전문을 서버로 전송합니다.
 CommRqData( "RQName"	,  "OPT10002"	,  "0"	,  "화면번호"); 
 </remarks>
</member><member name="F:PaikRichStock.Common.clsKiwoomDefine.Opt10081">
	<summary>
 [ opt10081 : 주식일봉차트조회요청 ]
 </summary>
	<remarks>
 1. Open API 조회 함수 입력값을 설정합니다.
 종목코드 = 전문 조회할 종목코드
 SetInputValue("종목코드"	,  "입력값 1");
 기준일자 = YYYYMMDD (20160101 연도4자리, 월 2자리, 일 2자리 형식)
 SetInputValue("기준일자"	,  "입력값 2");
 수정주가구분 = 0 or 1, 수신데이터 1:유상증자, 2:무상증자, 4:배당락, 8:액면분할, 16:액면병합, 32:기업합병, 64:감자, 256:권리락
 SetInputValue("수정주가구분"	,  "입력값 3");
  2. Open API 조회 함수를 호출해서 전문을 서버로 전송합니다.
 CommRqData( "RQName"	,  "opt10081"	,  "0"	,  "화면번호"); 
</remarks>
</member><member name="F:PaikRichStock.Common.clsKiwoomDefine.Opt10038">
	<summary>
 [ OPT10038 : 종목별증권사순위요청 ]
 </summary>
	<remarks>
 1. Open API 조회 함수 입력값을 설정합니다.
	종목코드 = 전문 조회할 종목코드
 SetInputValue("종목코드"	,  "입력값 1");
 시작일자 = YYYYMMDD (20160101 연도4자리, 월 2자리, 일 2자리 형식)
	SetInputValue("시작일자"	,  "입력값 2");
	종료일자 = YYYYMMDD (20160101 연도4자리, 월 2자리, 일 2자리 형식)
	SetInputValue("종료일자"	,  "입력값 3");
	조회구분 = 0: 입력한 시작,종료 날짜로 조회, 1: 전일, 조회지정일 입력(5일 ~ 120일)
	SetInputValue("조회구분"	,  "입력값 4");
	SetInputValue("기간"	,  "입력값 5");
 2. Open API 조회 함수를 호출해서 전문을 서버로 전송합니다.
	CommRqData( "RQName"	,  "OPT10038"	,  "0"	,  "화면번호"); 
 </remarks>
</member>
</members>
</doc>