<?xml version="1.0"?>
<doc>
<assembly>
<name>
Paik.DevTools
</name>
</assembly>
<members>
<member name="M:Paik.DevTools.CDateTime.IsTime(System.String,System.Boolean)">
	<summary>
 입력문자열이 시간형이 맞는지 체크한다.
 </summary>
	<param name="MyTime">hh:mm:ss or hh:mm</param>
	<param name="blnHr24">True이면 24:00을 인정 False이면 23:59까지만 인정</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CDateTime.IsDateF(System.String)">
	<summary>
 입력문자열이 날짜형식으로 변환가능한지 체크한다.
 </summary>
	<param name="dateType">yyyy/MM/dd or yyyyMMdd</param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="F:Paik.DevTools.Define.ElectSaveMode.Normal">
	<summary>
 임시저장
 </summary>
	<remarks></remarks>
</member><member name="F:Paik.DevTools.Define.ElectSaveMode.ElectSave">
	<summary>
 전자인증저장
 </summary>
	<remarks></remarks>
</member><member name="T:Paik.DevTools.Define.ElectSaveMode">
	<summary>
 저장시 임시저장인지 전자인증 저장인지 구분할 값
 </summary>
	<remarks></remarks>
</member><member name="T:Paik.DevTools.Define.AsmNameR">
	<summary>
 Report용 Assembly NameSpace 정의.
 </summary>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.StrCrLfSplit(System.String,System.Int32)">
	<summary>
 입력받은 문자를 입력받은 길이만큼 잘라서 배열에 저장한다. 단 문자개행을 만나면 자동으로 배열요소를 하나 증가시킨다.
 </summary>
	<param name="strText">입력 문자열</param>
	<param name="strLen">문자열을 자를 길이</param>
	<returns>입력 문자열을 길이만큼 자른 Array</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.LengthB(System.String)">
	<summary>문자열의 길이구하기(영문:1Byte,한글:2Byte)</summary>
	<param name="str">문자열의 길이를 구할 문자열</param>
	<returns>문자열의 길이</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.StrMidB(System.String,System.Int32,System.Int32)">
	<summary>입력받은 문자를 길이만큼 자른 후 그 문자를 구한다.</summary>
	<param name="strText">문자열</param>
	<param name="start">시작 위치</param>
	<param name="length">시작 위치에서 문자의 길이</param>
	<returns>시작위치에서 입력 길이만큼 자른 문자</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.StrLengthB(System.String,System.Int32)">
	<summary>입력받은 문자의 바이트를 계산하여 리턴한다.</summary>
	<param name="strText">문자열</param>
	<param name="totLength">채울 문자열의 총길이</param>
	<returns>입력받은 문자의 바이트</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.InStrCount(System.String,System.String)">
	<summary>문자열에 특정문자열이 포함된 갯수를 구한다.</summary>
	<param name="strBase">원본 문자열</param>
	<param name="strFind">원본 문자열에서 찾을 문자 또는 문자열</param>
	<returns>특정문자열이 나타난 갯수</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.CheckValidateDataLength(System.String,System.Int32,System.Int32,System.String)">
	<summary>진단서 등록시 입력되는 문자열의 길이를 체크한다.
 진단서는 형식이 정해져있는 레포트에 출력이 되는데
 Enter Key의 수나 입력문자열의 길이가 초과할 경우 인쇄시 오류가 발생한다.
 </summary>
	<param name="inputText">현재 입력되어 있는 문자열</param>
	<param name="maxLineCnt">입력가능한 줄의 수 EnterKey의 수</param>
	<param name="maxLen">입력가능한 열의 수</param>
	<param name="helpText">체크중인 TextBox의 용도</param>
	<returns>진단서 문자열 길이 체크값</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.Strings(System.Int32,System.String)">
	<summary>일정문자를 반복해서 갯수만큼 채운다.</summary>
	<param name="bindCnt">반복횟수</param>
	<param name="bindText">입력문자</param>
	<returns>일정문자를 반복 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.MergeFillString(System.String,System.Int32,System.String,Paik.DevTools.CString.FillAlignment)">
	<summary>문자열에 임의의 문자를 붙여서 그 길이만큼 자른 후 그 문자를 반환한다.</summary>
	<param name="baseText">입력문자열</param>
	<param name="maxLength">입력문자열을 잘라낼 길이</param>
 ''' <param name="fillChar">문자열에 포함될 임의의 문자</param>
 ''' <param name="alignment">입력받은 문자열에 차가 할 방법(오른쪽추가, 왼쪽추가)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.TextToTime(System.String)">
	<summary>문자열을 시간문자로 변경한다.
 입력된 문자열의 길이를 이용하여 24시간 형태의 문자로 변경한다.</summary>
	<param name="strTime">입력받은 문자열</param>
	<returns>24시간 형태로 변환된 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.HeadUpper(System.String)">
	<summary>텍스트 입력시 첫글자만 대문자로 바꾸기..</summary>
	<param name="str">입력문자열</param>
	<returns>첫글자만 대문자로 바뀐 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.SplitData(System.String,System.String,System.Int32)">
	<summary>
 구분자 (delimiter)로 나누어진 자료를 구분자 Index를 이용하여 해당 요소의 값을 구한다. index 는 0부터
 </summary>
	<param name="strData">나누고자 하는 Data</param>
	<param name="delimiter">구분자</param>
	<param name="index">나누어진 데이터의 구분 index (0부터 시작)</param>
	<returns>index번째 배열의 요소</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.SplitCount(System.String,System.String)">
	<summary>
 구분자(delimiter)로 나누어진 자료의 갯수를 구한다.
 </summary>
	<param name="strData">나누고자 하는 Data</param>
	<param name="delimiter">구분자</param>
	<returns>나누어진 배열의 총 갯수</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.SplitReplace(System.String,System.String,System.Int32,System.String)">
	<summary>구분자로 나누어진 문자열에서 특정 인덱스의 문자열을 다른 문자열로 변경한다.</summary>
	<param name="fullText">전체 문자열</param>
	<param name="replaceText">대체할 문자열</param>
	<param name="replaceIndex">fullText에서 구분자로 나누어서 변경될 배열의 요소 위치</param>
	<returns>특정인덱스의 문자열을 다른문자열로 치환된 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.NumberKeyChar(System.Char)">
	<summary>입력된KEY의 숫자이외는 입력을 제외한다(BackSpaces포함)</summary>
	<param name="keyChar">숫자인지 체크할 문자열</param>
	<returns>True,False</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.RemoveLastCrLfInStr(System.String)">
	<summary>입력의 끝에 무의미하게 들어간 ENTER KEY값을 없앤다.</summary>
	<param name="strText">입력한 STRING</param>
	<returns>CR, LF가 제거된 STRING</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.EnCoding(System.String)">
	<summary>스마트클라이언트 Text값을 EnCoding한다.</summary>
	<param name="strValue">입력한 STRING</param>
	<returns>EnCoding된 텍스트 값</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.DeCoding(System.String)">
	<summary>스마트클라이언트 Text값을 DeCoding한다.</summary>
	<param name="strValue">입력한 STRING</param>
	<returns>Decoding된 텍스트 값</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.FillChartNo(System.String,System.Int32)">
	<summary>좌측 '0'을 제외한 숫자를 입력했을때 왼쪽에 '0'을 채운다</summary>
	<param name="chartNo">입력숫자</param>
	<param name="charLength">'0'을 채워서 반환할 전체길이</param>
	<returns>'0'을 입력받은 수만큼 채운 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.LeftJustify(System.Int32,System.String)">
	<summary>왼쪽으로 부터 원하는 크기 만들기위해 Space를 채운다.</summary>
	<param name="MaxLen">원하는 문자열의 크기</param>
	<param name="varStr">입력문자열</param>
	<returns>입력문자열 왼쪽에 채워진 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.LeftJustify(System.Int32,System.String,System.String)">
	<summary>왼쪽으로 부터 원하는 크기 만들기위해 Space를 채운다.</summary>
	<param name="MaxLen">원하는 문자열의 크기</param>
	<param name="varStr">입력문자열</param>
	<param name="spaceStr">입력문자열의 왼쪽에 채울 문자열</param>
	<returns>입력문자열 왼쪽에 채워진 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.RightJustify(System.Int32,System.String)">
	<summary>오른쪽으로 부터 원하는 크기를 만들기위해 Space를 채운다.</summary>
	<param name="MaxLen">원하는 문자열의 크기</param>
	<param name="varStr">입력문자열</param>
	<returns>입력문자열 오른쪽에 채워진 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.RightJustifyTxt(System.Int32,System.String)">
	<summary>오른쪽으로 부터 원하는 크기를 만들기위해 Space를 채운다.</summary>
	<param name="MaxLen">원하는 문자열의 크기</param>
	<param name="varStr">입력문자열</param>
	<returns>입력문자열 왼쪽에 채워진 문자열</returns>
	<remarks></remarks>
</member><member name="M:Paik.DevTools.CString.RightJustify(System.Int32,System.String,System.String)">
	<summary>오른쪽으로 부터 원하는 크기를 만들기위해 Space를 채운다.</summary>
	<param name="MaxLen">원하는 문자열의 크기</param>
	<param name="varStr">입력문자열</param>
	<param name="spaceStr">입력문자열의 오른쪽에 채울 문자열</param>
	<returns>입력문자열 오른쪽에 채워진 문자열</returns>
	<remarks></remarks>
</member>
</members>
</doc>