Imports PaikRichStock.Common
Imports System.Xml
Imports System.IO

Public Class ucVolumeBasicAnalysis

    Private _MainStock2 As New PaikRichStock.Common.ucMainStockVer2
    Private _sourceDt As New DataTable
    Private _clsFunc As New PaikRichStock.Common.clsFunc

#Region " Property "
    Public WriteOnly Property MainStock2 As PaikRichStock.Common.ucMainStockVer2
        Set(value As PaikRichStock.Common.ucMainStockVer2)
            _MainStock2 = value
            For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                cboCondition.Items.Add(modDataTable.opt10059_Cal(i))
            Next

            cboCondition.Items.Add("주도세력")

        End Set
    End Property

    Private _tagetDt As New DataTable

    Public WriteOnly Property TagetDt As DataTable
        Set(value As DataTable)
            GetTagetDt(value)
            InitSourceDataTable()
            GetCurrentVolume()
        End Set
    End Property

    Public WriteOnly Property TagetDataSet As DataSet
        Set(value As DataSet)
            GetTagetDataSet(value)
            InitSourceDataTable()
            GetCurrentVolume()
        End Set
    End Property

    Public ReadOnly Property SourceDt As DataTable
        Get
            Return _sourceDt
        End Get
    End Property
#End Region

#Region " InitTagetDataTable "
    Private Sub InitTagetDataTable()
        _tagetDt.Reset()
        _tagetDt = Nothing
        _tagetDt = New DataTable

        With _tagetDt.Columns
            .Add("STOCK_CODE", System.Type.GetType("System.String"))
            .Add("STOCK_NAME", System.Type.GetType("System.String"))
        End With

    End Sub

    Private Sub InitSourceDataTable()
        _sourceDt.Reset()
        _sourceDt = Nothing
        _sourceDt = New DataTable

        With _sourceDt.Columns
            .Add("STOCK_CODE", System.Type.GetType("System.String"))
            .Add("STOCK_NAME", System.Type.GetType("System.String"))
            .Add("JUDO_SERUK", System.Type.GetType("System.String"))
            For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                .Add(modDataTable.opt10059_Cal(i) & "합최저점", System.Type.GetType("System.Int32"))
                .Add(modDataTable.opt10059_Cal(i) & "합최고점", System.Type.GetType("System.Int32"))
                .Add(modDataTable.opt10059_Cal(i) & "분산합비율", System.Type.GetType("System.Int16"))
                '.Add(modDataTable.opt10059_Cal(i) & "금액최저점", System.Type.GetType("System.Int64"))
                '.Add(modDataTable.opt10059_Cal(i) & "금액최고점", System.Type.GetType("System.Int64"))
                .Add(modDataTable.opt10059_Cal(i) & "금액최저점", System.Type.GetType("System.Int64"))
                .Add(modDataTable.opt10059_Cal(i) & "금액최고점", System.Type.GetType("System.Int64"))
                .Add(modDataTable.opt10059_Cal(i) & "분산금액비율", System.Type.GetType("System.Int16"))
            Next
        End With
    End Sub
#End Region

#Region " GetTagetDt "
    Private Sub GetTagetDt(ByVal value As DataTable)
        Dim dr2th As DataRow

        InitTagetDataTable()

        With _tagetDt
            For Each dr As DataRow In value.Rows
                dr2th = .NewRow

                dr2th("STOCK_CODE") = dr("STOCK_CODE")
                dr2th("STOCK_NAME") = dr("STOCK_NAME")

                .Rows.Add(dr2th)
            Next
        End With

    End Sub
#End Region

#Region " GetTagetDataSet "
    Private Sub GetTagetDataSet(ByVal value As DataSet)
        Dim dr2th As DataRow

        InitTagetDataTable()

        With _tagetDt
            For Each dr As DataRow In value.Tables(0).Rows
                dr2th = .NewRow

                dr2th("STOCK_CODE") = dr("STOCK_CODE")
                dr2th("STOCK_NAME") = dr("STOCK_NAME")

                .Rows.Add(dr2th)
            Next
        End With
    End Sub
#End Region

#Region " GetCurrentVolume "
    Private Sub GetCurrentVolume()
        If _tagetDt.Rows.Count < 1 Then Exit Sub
        Try

            For Each dr In _tagetDt.Rows
                GetXmlDataAnalysis(Trim(dr("STOCK_CODE").ToString()), Trim(dr("STOCK_NAME").ToString()))
            Next

            _clsFunc.DataTableMappingToDataGridView(_sourceDt, dgvList)

        Catch ex As Exception
            MsgBox(ex.ToString, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub GetXmlDataAnalysis(ByVal stockCode As String, ByVal stockName As String)
        Dim dt As New DataTable
        If stockName = "이화전기" Then
            MsgBox("이화전기")
        End If
        If stockName = "에스마크" Then
            MsgBox("에스마크")
        End If
        Try

            If File.Exists("C:\Xml2\" & stockCode & "_" & stockName & ".xml") Then
                If File.Exists("C:\Xml2\" & stockCode & "_" & stockName & ".xsd") = False Then Exit Sub
                Dim xmlFile As XmlReader
                Dim xmlFileSc As XmlReader
                xmlFile = XmlReader.Create("C:\Xml2\" & stockCode & "_" & stockName & ".xml", New XmlReaderSettings())
                xmlFileSc = XmlReader.Create("C:\Xml2\" & stockCode & "_" & stockName & ".xsd", New XmlReaderSettings())

                dt.ReadXmlSchema(xmlFileSc)
                dt.ReadXml(xmlFile)

                For i As Integer = 0 To dt.Rows.Count - 1
                    If Trim(dt.Rows(i).Item("거래량").ToString()) <> "" Then Exit For

                    If Trim(dt.Rows(i).Item("거래량").ToString()) = "" Then
                        dt.Rows.RemoveAt(0)
                    End If
                Next

                If dt.Rows.Count < 1 Then Exit Sub

                Dim dr As DataRow

                With _sourceDt

                    dr = .NewRow

                    dr("STOCK_CODE") = stockCode
                    dr("STOCK_NAME") = stockName

                    For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                        dr(modDataTable.opt10059_Cal(i) & "합최저점") = dt.Compute("MIN(" & modDataTable.opt10059_Cal(i) & "합)", String.Empty)
                        dr(modDataTable.opt10059_Cal(i) & "합최고점") = dt.Compute("MAX(" & modDataTable.opt10059_Cal(i) & "합)", String.Empty)
                        dr(modDataTable.opt10059_Cal(i) & "금액최저점") = dt.Compute("MIN(" & modDataTable.opt10059_Cal(i) & "금액합)", String.Empty)
                        dr(modDataTable.opt10059_Cal(i) & "금액최고점") = dt.Compute("MAX(" & modDataTable.opt10059_Cal(i) & "금액합)", String.Empty)
                        dr(modDataTable.opt10059_Cal(i) & "분산합비율") = CalDistribution(dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합"), _
                                                                                               dt.Compute("MIN(" & modDataTable.opt10059_Cal(i) & "합)", String.Empty), _
                                                                                                dt.Compute("MAX(" & modDataTable.opt10059_Cal(i) & "합)", String.Empty))
                        dr(modDataTable.opt10059_Cal(i) & "분산금액비율") = CalDistribution(dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액합"), _
                                                                                           dt.Compute("MIN(" & modDataTable.opt10059_Cal(i) & "금액합)", String.Empty), _
                                                                                          dt.Compute("MAX(" & modDataTable.opt10059_Cal(i) & "금액합)", String.Empty))
                    Next

                    Dim maxPriceQty As Integer

                    For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                        If modDataTable.opt10059_Cal(i) = "개인투자자" Then Continue For
                        If modDataTable.opt10059_Cal(i) = "기관계" Then Continue For

                        If maxPriceQty = 0 Then
                            maxPriceQty = dr(modDataTable.opt10059_Cal(i) & "금액최고점")
                            dr("JUDO_SERUK") = modDataTable.opt10059_Cal(i)
                        Else
                            If maxPriceQty < dr(modDataTable.opt10059_Cal(i) & "금액최고점") Then
                                maxPriceQty = dr(modDataTable.opt10059_Cal(i) & "금액최고점")
                                dr("JUDO_SERUK") = modDataTable.opt10059_Cal(i)
                            End If
                        End If
                    Next

                    .Rows.Add(dr)

                End With

            End If

        Catch ex As Exception
            MsgBox(ex.ToString, MsgBoxStyle.Exclamation)
        End Try
    End Sub
#End Region

    Private Function CalDistribution(ByVal value As Long, ByVal minValue As Long, ByVal MaxValue As Long) As Integer
        If MaxValue = 0 Then Return 0
        If (MaxValue - minValue) = 0 Then Return 0

        Return CInt(Math.Abs(((value - minValue) / (MaxValue - minValue)) * 100))
    End Function

    Private Sub btnJukCondition_Click(sender As Object, e As EventArgs) Handles btnJukCondition.Click
        If cboCondition.Text = "주도세력" Then
            For i As Integer = _sourceDt.Rows.Count - 1 To 0 Step -1
                If _sourceDt.Rows(i).Item(Trim(_sourceDt.Rows(i).Item("JUDO_SERUK")) & "분산금액비율") < nudGaInValue.Value Then
                    _sourceDt.Rows.RemoveAt(i)
                End If
            Next
        Else
            For i As Integer = _sourceDt.Rows.Count - 1 To 0 Step -1
                If _sourceDt.Rows(i).Item(cboCondition.Text & "분산금액비율") < nudGaInValue.Value Then
                    _sourceDt.Rows.RemoveAt(i)
                End If
            Next
        End If

        _clsFunc.DataTableMappingToDataGridView(_sourceDt, dgvList)

    End Sub
End Class