Imports PaikRichStock.Common

Public Class frmFavManage

    Private _DataAcc As New DataAccess

    Sub New(ByVal allStockDataset As DataSet, ByVal KospiDataset As DataSet, ByVal KosDakDataset As DataSet, ByVal oSpread As FarPoint.Win.Spread.FpSpread)

        ' 이 호출은 Windows Form 디자이너에 필요합니다.
        InitializeComponent()

        ' InitializeComponent() 호출 뒤에 초기화 코드를 추가하십시오.

        _AllStockDataset = allStockDataset
        _KospiDataset = KospiDataset
        _KosDakDataset = KosDakDataset
        _oSpread = oSpread

    End Sub

    Sub New(ByVal allStockDataset As DataSet, ByVal KospiDataset As DataSet, ByVal KosDakDataset As DataSet, ByVal favDs As DataSet)

        ' 이 호출은 Windows Form 디자이너에 필요합니다.
        InitializeComponent()

        ' InitializeComponent() 호출 뒤에 초기화 코드를 추가하십시오.

        _AllStockDataset = allStockDataset
        _KospiDataset = KospiDataset
        _KosDakDataset = KosDakDataset
        _favDs = favDs

    End Sub

    Private _AllStockDataset As DataSet
    Private _KospiDataset As DataSet
    Private _KosDakDataset As DataSet
    Private _favDs As DataSet
    Private _oSpread As FarPoint.Win.Spread.FpSpread

#Region " Enum "
    Private Enum SpFavGroupIndex
        InterId
        InterName
        StockId
    End Enum

    Private Enum spInterStocKIndex
        StockCode
        StockName
        InterId
        StockId
    End Enum

    Private Enum StockList
        StockName
        StockCode
    End Enum
#End Region

    Private Sub frmFavManage_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        _blnCboStockIdEvent = True
        SetBaseStockListDisplay()
        cboStockId_SelectedIndexChanged(Me, New System.EventArgs())
    End Sub

    Public Sub FormKeyDownHandle(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        If e.KeyCode < Keys.F1 Or e.KeyCode > Keys.F12 Then Exit Sub
        If e.Shift <> False Then Exit Sub

        Select Case e.KeyCode
            Case Keys.F2

            Case Keys.F5

            Case Keys.F6

            Case Keys.F12
                Me.Close()
        End Select

    End Sub

#Region " "
    Private Sub SetInitSpreadType()

    End Sub

#Region " 기본함수 "
    Private Sub SpreadInit(ByVal spread As FarPoint.Win.Spread.FpSpread, ByVal cleartype As Boolean, ByVal rowCount As Integer)
        spread.ActiveSheet.ClearRange(0, 0, spread.ActiveSheet.RowCount, spread.ActiveSheet.ColumnCount, cleartype)
        spread.ActiveSheet.RowCount = rowCount
    End Sub
#End Region

#Region " SetBaseStockListDisplay"
    Private Sub SetBaseStockListDisplay()
        Dim row As Integer = 0
        Dim dr As DataRow

        SpreadInit(spAllStock, True, 20)
        SpreadInit(spKosDakStock, True, 20)
        SpreadInit(spKospiStock, True, 20)

        With spAllStock.ActiveSheet
            For Each dr In _AllStockDataset.Tables("StockList").Rows
                If .RowCount - 1 <= row Then .RowCount = .RowCount + 1
                .Cells(row, StockList.StockName).Text = Trim(dr("STOCK_NAME").ToString())
                .Cells(row, StockList.StockCode).Text = Trim(dr("STOCK_CODE").ToString())

                row = row + 1
            Next
        End With

        row = 0

        With spKosDakStock.ActiveSheet
            For Each dr In _KosDakDataset.Tables("StockList").Rows
                If .RowCount - 1 <= row Then .RowCount = .RowCount + 1

                .Cells(row, StockList.StockName).Text = Trim(dr("STOCK_NAME").ToString())
                .Cells(row, StockList.StockCode).Text = Trim(dr("STOCK_CODE").ToString())

                row = row + 1
            Next
        End With

        row = 0

        With spKospiStock.ActiveSheet
            For Each dr In _KospiDataset.Tables("StockList").Rows
                If .RowCount - 1 <= row Then .RowCount = .RowCount + 1

                .Cells(row, StockList.StockName).Text = Trim(dr("STOCK_NAME").ToString())
                .Cells(row, StockList.StockCode).Text = Trim(dr("STOCK_CODE").ToString())

                row = row + 1
            Next
        End With


    End Sub
#End Region
#End Region

#Region " StoredRecordPsi02 "
    Private Function StoredRecordPsi02(ByVal stockId As String, ByVal interId As Integer, ByVal StockCode As String, ByVal StockPint As String, ByVal remark As String) As Boolean
        Dim arrParam As New ArrayParam
        Dim intNewMaterId As Integer = 0
        Dim ix As Integer = 0

        Return _DataAcc.p_Psi02Add("", stockId, interId, StockCode, StockPint, remark)

    End Function
#End Region

#Region " DelRecordPsi02 "
    Private Function DelRecordPsi02(ByVal stockId As String, ByVal interId As Integer, ByVal StockCode As String) As Boolean
        Dim arrParam As New ArrayParam
        Dim intNewMaterId As Integer = 0
        Dim ix As Integer = 0

        Return _DataAcc.p_psi02Del("", stockId, interId, StockCode)

    End Function
#End Region

#Region " StoredRecordPsi01 "
    Private Function StoredRecordPsi01(ByVal stockId As String, ByVal interId As Integer, ByVal interName As String) As Boolean
        Dim arrParam As New ArrayParam
        Dim intNewMaterId As Integer = 0
        Dim ix As Integer = 0

        Return _DataAcc.p_Psi01Add("", stockId, interId, interName)

    End Function
#End Region

#Region " DeleteRecordPsi01 "
    Private Function DeleteRecordPsi01(ByVal stockId As String, ByVal interId As Integer) As Boolean
        Dim arrParam As New ArrayParam
        Dim intNewMaterId As Integer = 0
        Dim ix As Integer = 0

        With arrParam
            .Clear()
            .Add("_STOCK_ID", stockId, Odbc.OdbcType.Char, ParameterDirection.Input)
            .Add("_INTER_ID", interId, Odbc.OdbcType.Int, ParameterDirection.Input)
        End With

        Try
            Common.mySqlDbConn.ExecuteNonQuery("p_psi01Del", arrParam)

            GetDataFavGroup()

            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function
#End Region

#Region " GetDataFavGroup - 관심그룹을 질의 "
    Private Sub GetDataFavGroup()
        Dim ds As DataSet, dr As DataRow
        Dim row As Integer = 0
        clsFunc.EraseForm(pnInter)

        ds = _DataAcc.p_Psi01Query("1", Mid(cboStockId.Text, 1, 6), 0, "")

        spInterGroup.ActiveSheet.ClearRange(0, 0, spInterGroup.ActiveSheet.RowCount, spInterGroup.ActiveSheet.ColumnCount, True)

        If ds.Tables(0).Rows.Count < 1 Then
            ds.Reset()
            Exit Sub
        End If

        With spInterGroup.ActiveSheet
            For Each dr In ds.Tables(0).Rows
                If .RowCount - 1 <= row Then .RowCount = .RowCount + 1

                .Cells(row, SpFavGroupIndex.InterId).Text = Trim(dr("INTER_ID").ToString())
                .Cells(row, SpFavGroupIndex.InterName).Text = Trim(dr("INTER_NAME").ToString())
                .Cells(row, SpFavGroupIndex.StockId).Text = Trim(dr("STOCK_ID").ToString())

                row = row + 1

            Next
        End With

        ds.Reset()

    End Sub
#End Region

#Region " GetDataFavStockList "
    Private Sub GetDataFavStockList(ByVal stockId As String, ByVal interId As String)
        Dim ds As DataSet, dr As DataRow
        Dim row As Integer = 0

        ds = _DataAcc.p_Psi02Query("1", stockId, interId, "", "", "")

        spInterStockList.ActiveSheet.ClearRange(0, 0, spInterStockList.ActiveSheet.RowCount, spInterStockList.ActiveSheet.ColumnCount, True)

        If ds.Tables(0).Rows.Count < 1 Then
            ds.Reset()
            Exit Sub
        End If

        With spInterStockList.ActiveSheet
            For Each dr In ds.Tables(0).Rows
                If .RowCount - 1 <= row Then .RowCount = .RowCount + 1

                .Cells(row, spInterStocKIndex.StockCode).Text = Trim(dr("STOCK_CODE").ToString())
                .Cells(row, spInterStocKIndex.StockName).Text = GetStockInfo(Trim(dr("STOCK_CODE").ToString()))
                .Cells(row, spInterStocKIndex.InterId).Text = Trim(dr("INTER_ID").ToString())
                .Cells(row, spInterStocKIndex.StockId).Text = Trim(dr("STOCK_ID").ToString())

                row = row + 1
            Next
        End With


    End Sub
#End Region

#Region " 종목명을 반환한다. "
    Private Function GetStockInfo(ByVal stockCode As String) As String
        Dim dv As DataView

        dv = New DataView(_AllStockDataset.Tables("StockList"))

        dv.RowFilter = String.Format("STOCK_CODE = '{0}'", stockCode)

        For Each drRowView As DataRowView In dv
            Return Trim(drRowView("STOCK_NAME").ToString())
        Next

        Return ""
    End Function
#End Region

#Region " Control Event "
    Private _blnCboStockIdEvent As Boolean = False
    Private Sub cboStockId_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboStockId.SelectedIndexChanged
        If _blnCboStockIdEvent = True Then
            GetDataFavGroup()
        End If
    End Sub

    Private Sub btnDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelete.Click
        If Trim(lblStockId.Text) = "" Then Exit Sub
        If Trim(lblInterId.Text) = "" Then Exit Sub

        With spInterGroup.ActiveSheet
            Dim intInterId As Integer
            If Trim(lblInterId.Text) = "" Then

                If Trim(.Cells(0, SpFavGroupIndex.InterId).Text) = "" Then
                    intInterId = 1
                Else
                    intInterId = .GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag.Data) + 2
                End If

            End If

            If DeleteRecordPsi01(Mid(lblStockId.Text, 1, 6), intInterId) = True Then
                MsgBox(" 삭제되었습니다.", MsgBoxStyle.Information)
            End If

        End With
    End Sub

    Private Sub btnInsert_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnInsert.Click
        If Trim(lblStockId.Text) = "" Then Exit Sub
        If Trim(txtInterName.Text) = "" Then Exit Sub

        With spInterGroup.ActiveSheet
            Dim intInterId As Integer
            If Trim(lblInterId.Text) = "" Then

                If Trim(.Cells(0, SpFavGroupIndex.InterId).Text) = "" Then
                    intInterId = 1
                Else
                    intInterId = .GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag.Data) + 2
                End If

            End If

            If StoredRecordPsi01(Mid(lblStockId.Text, 1, 6), intInterId, Trim(txtInterName.Text)) = True Then
                MsgBox(" 등록되었습니다.", MsgBoxStyle.Information)
            End If

        End With

    End Sub


    Private Sub btnInsertStock_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnInsertStock.Click
        If Trim(lblDeungInterId.Text) = "" Then Exit Sub
        If Trim(lblDeungStockId.Text) = "" Then Exit Sub

        If StoredRecordPsi02(Mid(lblDeungStockId.Text, 1, 6), Trim(lblDeungInterId.Text), Trim(lblDeungStockCode.Text), "01", "") = True Then
            GetDataFavStockList(Mid(lblDeungStockId.Text, 1, 6), Trim(lblDeungInterId.Text))

            lblDeungInterId.Text = ""
            lblDeungStockId.Text = ""
            lblDeungStockCode.Text = ""
            lblDeungStockName.Text = ""

        End If

    End Sub

    Private Sub btnDelStock_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelStock.Click
        If Trim(lblDeungInterId.Text) = "" Then Exit Sub
        If Trim(lblDeungStockId.Text) = "" Then Exit Sub

        If DelRecordPsi02(Mid(lblDeungStockId.Text, 1, 6), Trim(lblDeungInterId.Text), Trim(lblDeungStockCode.Text)) = True Then
            GetDataFavStockList(Mid(lblDeungStockId.Text, 1, 6), Trim(lblDeungInterId.Text))

            lblDeungInterId.Text = ""
            lblDeungStockId.Text = ""
            lblDeungStockCode.Text = ""
            lblDeungStockName.Text = ""

        End If

    End Sub

    Private Sub btnCondiInsert_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCondiInsert.Click

    End Sub
#End Region

#Region " Spread Event "
    Private Sub spInterGroup_CellDoubleClick(ByVal sender As Object, ByVal e As FarPoint.Win.Spread.CellClickEventArgs) Handles spInterGroup.CellDoubleClick
        With spInterGroup.ActiveSheet
            If Trim(.Cells(e.Row, SpFavGroupIndex.StockId).Text) = "" Then Exit Sub

            GetDataFavStockList(Trim(.Cells(e.Row, SpFavGroupIndex.StockId).Text), Trim(.Cells(e.Row, SpFavGroupIndex.InterId).Text))
            lblInterId.Text = Trim(.Cells(e.Row, SpFavGroupIndex.InterId).Text)
            lblStockId.Text = Trim(.Cells(e.Row, SpFavGroupIndex.StockId).Text)
            txtInterName.Text = Trim(.Cells(e.Row, SpFavGroupIndex.InterName).Text)

        End With
    End Sub

    Private Sub SetDeungStock(ByVal stockCode As String, ByVal stockName As String, ByVal deungStockId As String, ByVal deungInterId As String)
        lblDeungStockCode.Text = stockCode
        lblDeungStockName.Text = stockName
        lblDeungStockId.Text = deungStockId
        lblDeungInterId.Text = deungInterId
    End Sub

    Private Sub spAllStock_CellDoubleClick(ByVal sender As System.Object, ByVal e As FarPoint.Win.Spread.CellClickEventArgs) Handles spAllStock.CellDoubleClick, spKospiStock.CellDoubleClick, spKosDakStock.CellDoubleClick, spInterStockList.CellDoubleClick
        Dim oSpread As New FarPoint.Win.Spread.FpSpread
        oSpread = CType(sender, FarPoint.Win.Spread.FpSpread)

        With oSpread.ActiveSheet
            Select Case oSpread.Name
                Case spAllStock.Name
                    If Trim(.Cells(e.Row, StockList.StockCode).Text) = "" Then Exit Sub
                    SetDeungStock(Trim(.Cells(e.Row, StockList.StockCode).Text), Trim(.Cells(e.Row, StockList.StockName).Text), Mid(lblStockId.Text, 1, 6), Trim(lblInterId.Text))
                Case spKospiStock.Name
                    If .Cells(e.Row, StockList.StockCode).Text = "" Then Exit Sub
                    SetDeungStock(Trim(.Cells(e.Row, StockList.StockCode).Text), Trim(.Cells(e.Row, StockList.StockName).Text), Mid(lblStockId.Text, 1, 6), Trim(lblInterId.Text))
                Case spKosDakStock.Name
                    If .Cells(e.Row, StockList.StockCode).Text = "" Then Exit Sub
                    SetDeungStock(Trim(.Cells(e.Row, StockList.StockCode).Text), Trim(.Cells(e.Row, StockList.StockName).Text), Mid(lblStockId.Text, 1, 6), Trim(lblInterId.Text))
                Case spInterStockList.Name
                    If .Cells(e.Row, spInterStocKIndex.StockCode).Text = "" Then Exit Sub
                    SetDeungStock(Trim(.Cells(e.Row, spInterStocKIndex.StockCode).Text), Trim(.Cells(e.Row, spInterStocKIndex.StockName).Text), Mid(lblStockId.Text, 1, 6), Trim(lblInterId.Text))
            End Select
        End With

    End Sub

    Private _blnSort1 As Boolean = False
    Private _blnSort2 As Boolean = False
    Private _blnSort3 As Boolean = False

    Private Sub spAllStock_CellClick(ByVal sender As System.Object, ByVal e As FarPoint.Win.Spread.CellClickEventArgs) Handles spAllStock.CellClick, spKospiStock.CellClick, spKosDakStock.CellClick
        If e.ColumnHeader = False Then Exit Sub

        Select Case CType(sender, FarPoint.Win.Spread.FpSpread).Name
            Case spAllStock.Name
                Dim sInfo(0) As FarPoint.Win.Spread.SortInfo
                sInfo(0) = New FarPoint.Win.Spread.SortInfo(e.Column, _blnSort1)

                With spAllStock.ActiveSheet
                    .SortRange(0, 0, .GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag.Data) + 1, .ColumnCount, True, sInfo)
                End With
                _blnSort1 = Not _blnSort1

            Case spKospiStock.Name
                Dim sInfo(0) As FarPoint.Win.Spread.SortInfo
                sInfo(0) = New FarPoint.Win.Spread.SortInfo(e.Column, _blnSort1)

                With spKospiStock.ActiveSheet
                    .SortRange(0, 0, .GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag.Data) + 1, .ColumnCount, True, sInfo)
                End With
                _blnSort2 = Not _blnSort2

            Case spKosDakStock.Name
                Dim sInfo(0) As FarPoint.Win.Spread.SortInfo
                sInfo(0) = New FarPoint.Win.Spread.SortInfo(e.Column, _blnSort1)

                With spKosDakStock.ActiveSheet
                    .SortRange(0, 0, .GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag.Data) + 1, .ColumnCount, True, sInfo)
                End With
                _blnSort3 = Not _blnSort3

        End Select
    End Sub

#End Region

#Region " 검색 "
    Private _foundNonRow As Integer = -1

#Region " STRUCTURE "
    ' sheetIndex, searchString, caseSensitive, exactMatch, alternateSearch, 
    ' useWildcards, includeCellText, includeNotes, includeTags, 
    ' searchAsBlockRange, 
    'startRowIndex, startColumnIndex, endRowIndex, endColumnIndex, foundRowIndex, foundColumnIndex
    Public Structure SPREAD_SEARCH
        Public SHEET_INDEX As Integer
        Public SEARCH_STRING As String
        Public CASE_SENSITIVE As Boolean
        Public EXACT_MATCH As Boolean
        Public ALTERNATE_SEARCH As Boolean
        Public USEWILD_CARDS As Boolean
        Public INCLUDE_CELLTEXT As Boolean
        Public INCLUDE_NOTES As Boolean
        Public INCLUDE_TAGS As Boolean
        Public SEARCHAS_BLOCKRANGE As Boolean
        Public STARTROW_INDEX As Integer
        Public STARTCOLUMN_INDEX As Integer
        Public ENDROW_INDEX As Integer
        Public ENDCOLUMN_INDEX As Integer
    End Structure
#End Region

    Private Sub txtSearchStock_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSearchStock.TextChanged
        If tbStockList.SelectedIndex = 0 Then Exit Sub

        If Trim(txtSearchStock.Text) = "" Then Exit Sub

        Dim findRow As Integer = 0
        Dim findColumn As Integer = 0
        Dim findRow2 As Integer = 0
        Dim findColumn2 As Integer = 0
        Dim oSpread As New FarPoint.Win.Spread.FpSpread

        Select Case tbStockList.SelectedIndex
            Case 1
                oSpread = spAllStock
            Case 2
                oSpread = spKospiStock
            Case 3
                oSpread = spKosDakStock
            Case Else
                Exit Sub
        End Select

        Dim spreadSearch As SPREAD_SEARCH

        spreadSearch.SHEET_INDEX = 0
        spreadSearch.SEARCH_STRING = Trim(txtSearchStock.Text)
        spreadSearch.CASE_SENSITIVE = False
        spreadSearch.EXACT_MATCH = False
        spreadSearch.ALTERNATE_SEARCH = False
        spreadSearch.USEWILD_CARDS = False
        spreadSearch.INCLUDE_CELLTEXT = True
        spreadSearch.INCLUDE_NOTES = False
        spreadSearch.INCLUDE_TAGS = False
        spreadSearch.SEARCHAS_BLOCKRANGE = True
        If _foundNonRow = -1 Then
            spreadSearch.STARTROW_INDEX = 0
        Else
            spreadSearch.STARTROW_INDEX = _foundNonRow
        End If

        spreadSearch.STARTCOLUMN_INDEX = StockList.StockName
        spreadSearch.ENDROW_INDEX = oSpread.ActiveSheet.RowCount - 1
        spreadSearch.ENDCOLUMN_INDEX = StockList.StockName

        ' sheetIndex, searchString, caseSensitive, exactMatch, alternateSearch, useWildcards, includeCellText, includeNotes, includeTags, searchAsBlockRange, startRowIndex, startColumnIndex, endRowIndex, endColumnIndex, foundRowIndex, foundColumnIndex)
        ' spNonExeList.Search(0, Trim(txtPatName.Text), False, False, False, False, True, False, False, False, _foundNonRow2, 0, spNonExeList.ActiveSheet.RowCount - 1, 0, findRow, spIndex.PatName)
        With spreadSearch
            oSpread.Search(.SHEET_INDEX, .SEARCH_STRING, .CASE_SENSITIVE, .EXACT_MATCH, .ALTERNATE_SEARCH, .USEWILD_CARDS, _
                                 .INCLUDE_CELLTEXT, .INCLUDE_NOTES, .INCLUDE_TAGS, .SEARCHAS_BLOCKRANGE, .STARTROW_INDEX, .STARTCOLUMN_INDEX, .ENDROW_INDEX, .ENDCOLUMN_INDEX, findRow, findColumn)
        End With

        If findRow = -1 Then
            _foundNonRow = 0
        Else
            _foundNonRow = findRow
        End If

        oSpread.SetViewportTopRow(0, _foundNonRow)
    End Sub

#End Region

    Private Sub menuItemDel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles menuItemDel.Click

    End Sub

End Class