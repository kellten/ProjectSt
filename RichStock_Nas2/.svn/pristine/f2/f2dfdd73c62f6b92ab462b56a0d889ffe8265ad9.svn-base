Imports PaikRichStock.Common
Imports Microsoft.Office.Interop

Public Class ucTotalVolumeAnaylsis
    Private _MainStock As New PaikRichStock.Common.ucMainStockVer2
    Private _stockCode As String = ""

    Public Property StockCode As String
        Get
            Return _stockCode
        End Get
        Set(value As String)
            _stockCode = value
            InitClear()
            lblStockCode.Text = value
            lblStockName.Text = _MainStock.GetStockInfo(value)
            GetOpt10059()
        End Set
    End Property

    Public WriteOnly Property MainStock As PaikRichStock.Common.ucMainStockVer2
        Set(value As PaikRichStock.Common.ucMainStockVer2)
            _MainStock = value
            AddHandler _MainStock.OnReceiveTrData_Opt10059, AddressOf OnReceiveTrData_opt10059
            AddHandler _MainStock.OnReceiveTrData_opt10081, AddressOf OnReceiveTrData_opt10081
        End Set
    End Property

#Region " InitClear "
    Private Sub InitClear()
        _dt10059.Reset()
        _dtOpt10081.Reset()
    End Sub

#End Region

#Region " Opt10059 "
    Private _dt10059 As New DataTable

    Private Sub CallOpt10059(ByVal startDate As String)

        _MainStock.Opt10059_OnReceiveTrData(startDate, Trim(_stockCode), _MainStock.GetStockInfo(_stockCode), "2", "0", "1")

    End Sub

    Private Sub GetOpt10059()
        If _dt10059 Is Nothing = False Then
            _dt10059.Reset()
        End If

        Dim sysDate As String = CDateTime.FormatDate(Now.Date)

        CallOpt10059(sysDate)

    End Sub

    Private Sub OnReceiveTrData_opt10059(ByVal ds As DataSet)
        If ds Is Nothing = True Then
            MathingVolumeAToDt10059()
            Exit Sub
        End If

        If ds.Tables(0).Rows.Count < 1 Then
            MathingVolumeAToDt10059()
            Exit Sub
        End If

        Dim dr2th As DataRow
        Dim nextDate As String = ""

        With _dt10059
            If _dt10059.Rows.Count < 1 Then

                If clsFunc.DataTableColumnCloneToDataSet(_dt10059, ds) = False Then
                    MsgBox("_dtOpt10059에 컬럼 추가가 실패했습니다.", MsgBoxStyle.Exclamation)
                    Exit Sub
                End If

            End If

            For Each dr In ds.Tables(0).Rows
                dr2th = .Rows.Add

                For i As Integer = 0 To ds.Tables(0).Columns.Count - 1
                    dr2th(ds.Tables(0).Columns(i).ColumnName) = dr(ds.Tables(0).Columns(i).ColumnName)
                Next

            Next

            nextDate = CDateTime.FormatDate(DateAdd(DateInterval.Day, -1, CDate(CDateTime.FormatDate(ds.Tables(0).Rows(ds.Tables(0).Rows.Count - 1).Item("일자"), "."))))

        End With

        System.Threading.Thread.Sleep(200)

        CallOpt10059(nextDate)

    End Sub

    Private Sub MathingVolumeAToDt10059()
        AvaliableCirculationStockQty()
        CalHighestLowestDistribution()
        GetOpt10081("")
    End Sub


    Private _InvestGbSum_GaeIn As Integer = 0
    Private _InvestGbSum_Fore As Integer = 0
    Private _InvestGbSum_Gigan As Integer = 0
    Private _InvestGbSum_GumWoong As Integer = 0
    Private _InvestGbSum_Bohum As Integer = 0
    Private _InvestGbSum_Tusin As Integer = 0
    Private _InvestGbSum_GitaGumWoong As Integer = 0
    Private _InvestGbSum_bank As Integer = 0
    Private _InvestGbSum_YeungGiGum As Integer = 0
    Private _InvestGbSum_SamoFund As Integer = 0
    Private _InvestGbSum_Nation As Integer = 0
    Private _InvestGbSum_GitaBubin As Integer = 0
    Private _InvestGbSum_IOFor As Integer = 0

    Private _AvaliableCirculation_StockQty As Integer = 0

    Private Enum dgvVolumeBIndex
        Gigan
        InvestGbSum_GaeIn
        InvestGbSum_Fore
        InvestGbSum_Gigan
        InvestGbSum_GumWoong
        InvestGbSum_Bohum
        InvestGbSum_Tusin
        InvestGbSum_GitaGumWoong
        InvestGbSum_bank
        InvestGbSum_YeungGiGum
        InvestGbSum_SamoFund
        InvestGbSum_Nation
        InvestGbSum_GitaBubin
        InvestGbSum_IOFor
    End Enum

    Private Sub AvaliableCirculationStockQty()
        _AvaliableCirculation_StockQty = 0
        _InvestGbSum_GaeIn = 0
        _InvestGbSum_Fore = 0
        _InvestGbSum_Gigan = 0
        _InvestGbSum_GumWoong = 0
        _InvestGbSum_Bohum = 0
        _InvestGbSum_Tusin = 0
        _InvestGbSum_GitaGumWoong = 0
        _InvestGbSum_bank = 0
        _InvestGbSum_YeungGiGum = 0
        _InvestGbSum_SamoFund = 0
        _InvestGbSum_Nation = 0
        _InvestGbSum_GitaBubin = 0
        _InvestGbSum_IOFor = 0

        For Each drv As DataRow In _dt10059.Rows
            _InvestGbSum_GaeIn = _InvestGbSum_GaeIn + drv("개인투자자")
            _InvestGbSum_Fore = _InvestGbSum_Fore + drv("외국인투자자")
            _InvestGbSum_Gigan = _InvestGbSum_Gigan + drv("기관계")
            _InvestGbSum_GumWoong = _InvestGbSum_GumWoong + drv("금융투자")
            _InvestGbSum_Bohum = _InvestGbSum_Bohum + drv("보험")
            _InvestGbSum_Tusin = _InvestGbSum_Tusin + drv("투신")
            _InvestGbSum_GitaGumWoong = _InvestGbSum_GitaGumWoong + drv("기타금융")
            _InvestGbSum_bank = _InvestGbSum_bank + drv("은행")
            _InvestGbSum_YeungGiGum = _InvestGbSum_YeungGiGum + drv("연기금등")
            _InvestGbSum_SamoFund = _InvestGbSum_SamoFund + drv("사모펀드")
            _InvestGbSum_Nation = _InvestGbSum_Nation + drv("국가")
            _InvestGbSum_GitaBubin = _InvestGbSum_GitaBubin + drv("기타법인")
            _InvestGbSum_IOFor = _InvestGbSum_IOFor + drv("내외국인")
        Next

        _AvaliableCirculation_StockQty = _InvestGbSum_GaeIn + _InvestGbSum_Fore + _InvestGbSum_Gigan + _InvestGbSum_GitaBubin + _InvestGbSum_IOFor

        lblInvestGbSumlblGaeIn.Text = _InvestGbSum_GaeIn
        lblInvestGbSumlblFore.Text = _InvestGbSum_Fore
        lblInvestGbSumlblGigan.Text = _InvestGbSum_Gigan
        lblInvestGbSumlblGumWoong.Text = _InvestGbSum_GumWoong
        lblInvestGbSumlblBohum.Text = _InvestGbSum_Bohum
        lblInvestGbSumlblTusin.Text = _InvestGbSum_Tusin
        lblInvestGbSumlblGitaGumWoong.Text = _InvestGbSum_GitaGumWoong
        lblInvestGbSumlblbank.Text = _InvestGbSum_bank
        lblInvestGbSumlblYeungGiGum.Text = _InvestGbSum_YeungGiGum
        lblInvestGbSumlblSamoFund.Text = _InvestGbSum_SamoFund
        lblInvestGbSumlblNation.Text = _InvestGbSum_Nation
        lblInvestGbSumlblGitaBubin.Text = _InvestGbSum_GitaBubin
        lblInvestGbSumlblIOFor.Text = _InvestGbSum_IOFor

    End Sub

    Private _maxHighestDate As String = ""
    Private _maxHighestPrice As String = ""

    Private Sub CalHighestLowestDistribution()

        _maxHighestPrice = 0
        _maxHighestDate = ""

        Dim intInvestGbSum_GaeIn As Integer = 0
        Dim intInvestGbSum_Fore As Integer = 0
        Dim intInvestGbSum_Gigan As Integer = 0
        Dim intInvestGbSum_GumWoong As Integer = 0
        Dim intInvestGbSum_Bohum As Integer = 0
        Dim intInvestGbSum_Tusin As Integer = 0
        Dim intInvestGbSum_GitaGumWoong As Integer = 0
        Dim intInvestGbSum_bank As Integer = 0
        Dim intInvestGbSum_YeungGiGum As Integer = 0
        Dim intInvestGbSum_SamoFund As Integer = 0
        Dim intInvestGbSum_Nation As Integer = 0
        Dim intInvestGbSum_GitaBubin As Integer = 0
        Dim intInvestGbSum_IOFor As Integer = 0

        Dim intYooTongQty As Integer = 0
        Dim intSumQty As Integer = 0
        Dim intGiganSumQty As Integer = 0

        For Each drv As DataRow In _dt10059.Rows
            If _maxHighestDate = "" Then
                _maxHighestPrice = CInt(drv("현재가"))
                _maxHighestDate = Trim(drv("일자"))
            Else
                If _maxHighestPrice < CInt(drv("현재가")) Then
                    _maxHighestPrice = CInt(drv("현재가"))
                    _maxHighestDate = Trim(drv("일자"))
                End If
            End If
        Next

        lblMaxHighestDate.Text = _maxHighestDate
        lblMaxHighestPrice.Text = _maxHighestPrice

        With _dt10059
            .Columns.Add("총합")
            .Columns.Add("유통량")
            .Columns.Add("개인투자자합")
            .Columns.Add("외국인투자자합")
            .Columns.Add("기관계합")
            .Columns.Add("금융투자합")
            .Columns.Add("보험합")
            .Columns.Add("투신합")
            .Columns.Add("기타금융합")
            .Columns.Add("은행합")
            .Columns.Add("연기금등합")
            .Columns.Add("사모펀드합")
            .Columns.Add("국가합")
            .Columns.Add("기타법인합")
            .Columns.Add("내외국인등락합")

            .Columns.Add("개관여")
            .Columns.Add("외관여")
            .Columns.Add("기관여")
            .Columns.Add("금관여")
            .Columns.Add("보관여")
            .Columns.Add("투관여")
            .Columns.Add("기금관여")
            .Columns.Add("은관여")
            .Columns.Add("연여")
            .Columns.Add("사관여")
            .Columns.Add("국관여")
            .Columns.Add("기법관여")
            .Columns.Add("내관여")


            For row As Integer = .Rows.Count - 1 To 0 Step -1
                If row = .Rows.Count - 1 Then

                    intInvestGbSum_GaeIn = .Rows(row).Item("개인투자자")
                    intInvestGbSum_Fore = .Rows(row).Item("외국인투자자")
                    'intInvestGbSum_Gigan = .Rows(row).Item("기관계")
                    intInvestGbSum_GumWoong = .Rows(row).Item("금융투자")
                    intInvestGbSum_Bohum = .Rows(row).Item("보험")
                    intInvestGbSum_Tusin = .Rows(row).Item("투신")
                    intInvestGbSum_GitaGumWoong = .Rows(row).Item("기타금융")
                    intInvestGbSum_bank = .Rows(row).Item("은행")
                    intInvestGbSum_YeungGiGum = .Rows(row).Item("연기금등")
                    intInvestGbSum_SamoFund = .Rows(row).Item("사모펀드")
                    intInvestGbSum_Nation = .Rows(row).Item("국가")
                    intInvestGbSum_GitaBubin = .Rows(row).Item("기타법인")
                    intInvestGbSum_IOFor = .Rows(row).Item("내외국인")

                Else

                    intInvestGbSum_GaeIn = intInvestGbSum_GaeIn + .Rows(row).Item("개인투자자")
                    intInvestGbSum_Fore = intInvestGbSum_Fore + .Rows(row).Item("외국인투자자")
                    'intInvestGbSum_Gigan = intInvestGbSum_Gigan + .Rows(row).Item("기관계")
                    intInvestGbSum_GumWoong = intInvestGbSum_GumWoong + .Rows(row).Item("금융투자")
                    intInvestGbSum_Bohum = intInvestGbSum_Bohum + .Rows(row).Item("보험")
                    intInvestGbSum_Tusin = intInvestGbSum_Tusin + .Rows(row).Item("투신")
                    intInvestGbSum_GitaGumWoong = intInvestGbSum_GitaGumWoong + .Rows(row).Item("기타금융")
                    intInvestGbSum_bank = intInvestGbSum_bank + .Rows(row).Item("은행")
                    intInvestGbSum_YeungGiGum = intInvestGbSum_YeungGiGum + .Rows(row).Item("연기금등")
                    intInvestGbSum_SamoFund = intInvestGbSum_SamoFund + .Rows(row).Item("사모펀드")
                    intInvestGbSum_Nation = intInvestGbSum_Nation + .Rows(row).Item("국가")
                    intInvestGbSum_GitaBubin = intInvestGbSum_GitaBubin + .Rows(row).Item("기타법인")
                    intInvestGbSum_IOFor = intInvestGbSum_IOFor + .Rows(row).Item("내외국인")

                End If

                intGiganSumQty = intInvestGbSum_GumWoong + intInvestGbSum_Bohum + intInvestGbSum_Tusin + intInvestGbSum_GitaGumWoong + intInvestGbSum_bank + _
                                 intInvestGbSum_YeungGiGum + intInvestGbSum_SamoFund + intInvestGbSum_Nation

                intSumQty = intInvestGbSum_GaeIn + intInvestGbSum_Fore + intInvestGbSum_GitaBubin + intInvestGbSum_IOFor + intGiganSumQty

                If intInvestGbSum_GaeIn > 0 Then
                    intYooTongQty = intInvestGbSum_GaeIn
                End If

                If intInvestGbSum_Fore > 0 Then
                    intYooTongQty = intYooTongQty + intInvestGbSum_Fore
                End If

                If intInvestGbSum_Gigan > 0 Then
                    intYooTongQty = intYooTongQty + intInvestGbSum_Gigan
                End If

                If intInvestGbSum_GitaBubin > 0 Then
                    intYooTongQty = intYooTongQty + intInvestGbSum_GitaBubin
                End If

                If intInvestGbSum_Nation > 0 Then
                    intYooTongQty = intYooTongQty + intInvestGbSum_Nation
                End If

                If intInvestGbSum_IOFor > 0 Then
                    intYooTongQty = intYooTongQty + intInvestGbSum_IOFor
                End If

                .Rows(row).Item("총합") = intSumQty
                .Rows(row).Item("유통량") = intYooTongQty
                .Rows(row).Item("개인투자자합") = intInvestGbSum_GaeIn
                .Rows(row).Item("외국인투자자합") = intInvestGbSum_Fore
                .Rows(row).Item("기관계합") = intGiganSumQty
                .Rows(row).Item("금융투자합") = intInvestGbSum_GumWoong
                .Rows(row).Item("보험합") = intInvestGbSum_Bohum
                .Rows(row).Item("투신합") = intInvestGbSum_Tusin
                .Rows(row).Item("기타금융합") = intInvestGbSum_GitaGumWoong
                .Rows(row).Item("은행합") = intInvestGbSum_bank
                .Rows(row).Item("연기금등합") = intInvestGbSum_YeungGiGum
                .Rows(row).Item("사모펀드합") = intInvestGbSum_SamoFund
                .Rows(row).Item("국가합") = intInvestGbSum_Nation
                .Rows(row).Item("기타법인합") = intInvestGbSum_GitaBubin
                .Rows(row).Item("내외국인등락합") = intInvestGbSum_IOFor

                intYooTongQty = 0
                intSumQty = 0
                intGiganSumQty = 0

            Next

            If intInvestGbSum_GaeIn > 0 Then
                lblYooTongQty.Text = intInvestGbSum_GaeIn
            End If

            If intInvestGbSum_Fore > 0 Then
                lblYooTongQty.Text = lblYooTongQty.Text + intInvestGbSum_Fore
            End If

            If intInvestGbSum_Gigan > 0 Then
                lblYooTongQty.Text = lblYooTongQty.Text + intInvestGbSum_Gigan
            End If

            If intInvestGbSum_GitaBubin > 0 Then
                lblYooTongQty.Text = lblYooTongQty.Text + intInvestGbSum_GitaBubin
            End If

            If intInvestGbSum_IOFor > 0 Then
                lblYooTongQty.Text = lblYooTongQty.Text + intInvestGbSum_IOFor
            End If

        End With

    End Sub

#End Region

#Region " Opt10081"
    Private _dtOpt10081 As New DataTable

    Private Sub CallOpt10081(ByVal stockCode As String, ByVal stdDate As String)
        _MainStock.Opt10081_OnReceiveTrData(stockCode, _MainStock.GetStockInfo(stockCode), stdDate)
    End Sub

    Private Sub GetOpt10081(ByVal stdDateValue As String)
        Dim stdDate As String = ""

        If _dtOpt10081 Is Nothing = False Then
            _dtOpt10081.Reset()
        End If

        stdDate = CDateTime.FormatDate(DateAdd("d", -1, CDateTime.FormatDate(Now.Date, "-")), "")

        Dim strStockCode As String = ""

        CallOpt10081(_stockCode, stdDate)

    End Sub

    Private Sub OnReceiveTrData_opt10081(ByVal ds As DataSet)
        If ds Is Nothing = True Then
            ComBineOpt10059WithOpt10081()
            Exit Sub
        End If

        If ds.Tables(0).Rows.Count < 1 Then
            ComBineOpt10059WithOpt10081()
            Exit Sub
        End If

        Dim dr2th As DataRow
        Dim nextDate As String = ""

        With _dtOpt10081

            If _dtOpt10081.Rows.Count < 1 Then

                If clsFunc.DataTableColumnCloneToDataSet(_dtOpt10081, ds) = False Then
                    MsgBox("_dtOpt10081에 컬럼 추가가 실패했습니다.", MsgBoxStyle.Exclamation)
                    Exit Sub
                End If

            End If

            For Each dr In ds.Tables(0).Rows
                dr2th = .Rows.Add

                For i As Integer = 0 To ds.Tables(0).Columns.Count - 1
                    dr2th(ds.Tables(0).Columns(i).ColumnName) = dr(ds.Tables(0).Columns(i).ColumnName)
                Next

            Next
            Dim stdDate As String = ""

            stdDate = CDateTime.FormatDate(DateAdd("d", -1, CDateTime.FormatDate(Now.Date, "-")), "")

            nextDate = CDateTime.FormatDate(DateAdd(DateInterval.Day, -1, CDate(CDateTime.FormatDate(ds.Tables(0).Rows(ds.Tables(0).Rows.Count - 1).Item("일자"), "."))))

            System.Threading.Thread.Sleep(200)

            Dim stockCode As String = ""


            CallOpt10081(_stockCode, nextDate)


        End With

    End Sub
#End Region

#Region " ComBineOpt10059WithOpt10081 "
    Private Sub ComBineOpt10059WithOpt10081()

        For column As Integer = 0 To _dtOpt10081.Columns.Count - 1
            If _dtOpt10081.Columns(column).ColumnName = "현재가" Then
                _dtOpt10081.Columns(column).ColumnName = "종가"
            End If

            If _dtOpt10081.Columns(column).ColumnName = "일자" Then
                _dtOpt10081.Columns(column).ColumnName = "일자2"
            End If
        Next

        If clsFunc.DataTableColumnCloneToDataSet(_dt10059, _dtOpt10081) = False Then
            MsgBox("_dt10059에 컬럼 추가가 실패했습니다.", MsgBoxStyle.Exclamation)
            Exit Sub
        End If

        Dim dr2th As DataRow
        Dim dr As DataRow

        With _dt10059
            For Each dr In _dt10059.Rows

                For Each dr2th In _dtOpt10081.Rows
                    If Trim(dr("일자").ToString()) = Trim(dr2th("일자2").ToString()) Then
                        For i As Integer = 0 To _dtOpt10081.Columns.Count - 1
                            dr(_dtOpt10081.Columns(i).ColumnName) = dr2th(_dtOpt10081.Columns(i).ColumnName)
                        Next

                        Exit For

                    End If
                Next
            Next
        End With

        dgvVolumeA.DataSource = _dt10059
    End Sub
#End Region

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        'Dim rowsTotal, colsTotal As Short
        'Dim I, j, iC As Short
        'System.Windows.Forms.Cursor.Current = System.Windows.Forms.Cursors.WaitCursor
        'Dim xlApp As New Excel.Application
        'Try
        '    Dim excelBook As Excel.Workbook = xlApp.Workbooks.Add
        '    Dim excelWorksheet As Excel.Worksheet = CType(excelBook.Worksheets(1), Excel.Worksheet)
        '    xlApp.Visible = True
        '    rowsTotal = dgvVolumeA.RowCount - 1
        '    colsTotal = dgvVolumeA.Columns.Count - 1
        '    With excelWorksheet
        '        .Cells.Select()
        '        .Cells.Delete()
        '        For iC = 0 To colsTotal
        '            .Cells(1, iC + 1).Value = dgvVolumeA.Columns(iC).HeaderText
        '        Next
        '        For I = 0 To rowsTotal - 1
        '            For j = 0 To colsTotal - 1
        '                .Cells(I + 2, j + 1).value = dgvVolumeA.Rows(I).Cells(j).Value
        '            Next j
        '        Next I
        '        .Rows("1:1").Font.FontStyle = "Bold"
        '        .Rows("1:1").Font.Size = 10
        '        .Cells.Columns.AutoFit()
        '        .Cells.Select()
        '        .Cells.EntireColumn.AutoFit()
        '        .Cells(1, 1).Select()
        '    End With
        'Catch ex As Exception
        '    MsgBox("Export Excel Error " & ex.Message)
        'Finally
        '    'RELEASE ALLOACTED RESOURCES
        '    System.Windows.Forms.Cursor.Current = System.Windows.Forms.Cursors.Default
        '    xlApp = Nothing
        'End Try

        Dim sysDate As String = CDateTime.FormatDate(Now.Date)

        Dim strFileName As String = "C:\" & lblStockName.Text & "_" & sysDate
        If System.IO.File.Exists(strFileName) Then
            If (MessageBox.Show("Do you want to replace from the existing file?", "Export to Excel", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) = System.Windows.Forms.DialogResult.Yes) Then
                System.IO.File.Delete(strFileName)
            Else
                Return
            End If

        End If
        Dim _excel As New Excel.Application
        Dim wBook As Excel.Workbook
        Dim wSheet As Excel.Worksheet

        wBook = _excel.Workbooks.Add()
        wSheet = wBook.ActiveSheet()

        Dim dt As System.Data.DataTable = _dt10059
        Dim dc As System.Data.DataColumn
        Dim dr As System.Data.DataRow
        Dim colIndex As Integer = 0
        Dim rowIndex As Integer = 0

        For Each dc In dt.Columns
            colIndex = colIndex + 1
            wSheet.Cells(1, colIndex) = dc.ColumnName
        Next

        For Each dr In dt.Rows
            rowIndex = rowIndex + 1
            colIndex = 0
            For Each dc In dt.Columns
                colIndex = colIndex + 1
                wSheet.Cells(rowIndex + 1, colIndex) = dr(dc.ColumnName)
            Next
        Next
        wSheet.Columns.AutoFit()
        wBook.SaveAs(strFileName)

        ReleaseObject(wSheet)
        wBook.Close(False)
        ReleaseObject(wBook)
        _excel.Quit()
        ReleaseObject(_excel)
        GC.Collect()

        MessageBox.Show("File Export Successfully!")

    End Sub

    Private Sub ReleaseObject(ByVal o As Object)
        Try
            While (System.Runtime.InteropServices.Marshal.ReleaseComObject(o) > 0)
            End While
        Catch
        Finally
            o = Nothing
        End Try
    End Sub
End Class
