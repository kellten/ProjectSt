using PaikRichStock.Common;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
namespace Chart
{
    public partial class frmChartSub : Form
    {
        private string[] _strBuySell = { "일자", "개인", "외인", "기관", "금융투자", "보험", "투신", "기타금융", "은행", "연기금등", "사모펀드", "국가", "기타법인", "내외국인" };
        private string _stockCode;
        private string _stockDate;
        private DataSet _dsOpt10059;
        public frmChartSub(string stockCode,string stockDate)
        {
            InitializeComponent();
            _stockCode = stockCode;
            _stockDate = stockDate;
        }

        Task DoOpt100059Async()
        {
            TaskCompletionSource<bool> tcs = null;
            tcs = new TaskCompletionSource<bool>();
            
            dataGridView1.DataSource = null;
            using (DataAccess DataAcc = new DataAccess())
            {
                _dsOpt10059 = DataAcc.p_stock_buysell_state_query("3", _stockCode, _stockDate , false);
                dataGridView1.DataSource = _dsOpt10059.Tables[0];
            }
            for (int ix = 0; ix < _strBuySell.Length; ix++)
            {
                dataGridView1.Columns[ix].HeaderText = _strBuySell[ix];
                dataGridView1.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                if (ix >= 0 && ix < 4) dataGridView1.Columns[ix].Width = 65;
                else dataGridView1.Columns[ix].Width = 44;
            }

            for (int row = 0; row < dataGridView1.RowCount - 1; row++)
            {
                for (int col = 0; col < dataGridView1.ColumnCount; col++)
                {
                    dataGridView1.Rows[row].Cells[col].Style.Font = new System.Drawing.Font("굴림", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(129)));
                    if (dataGridView1.Columns[col].HeaderText == "일자") continue;
                    if (dataGridView1.Rows[row].Cells[col].Value.ToString() == "") continue;
                    if (Convert.ToDouble(dataGridView1.Rows[row].Cells[col].Value.ToString()) < 0)
                    {
                        dataGridView1.Rows[row].Cells[col].Style.ForeColor = System.Drawing.Color.Blue;
                    }
                    else if (Convert.ToDouble(dataGridView1.Rows[row].Cells[col].Value.ToString()) > 0)
                    {
                        dataGridView1.Rows[row].Cells[col].Style.ForeColor = System.Drawing.Color.Red;
                    }
                    else
                    {
                        dataGridView1.Rows[row].Cells[col].Style.ForeColor = System.Drawing.Color.Empty;
                    }
                }
            }
            tcs.SetResult(true);
            return tcs.Task;
        }
        Task DartApi()
        {
            DataTable dt;
            TaskCompletionSource<bool> tcs = null;
            dataGridView2.DataSource = null;

            tcs = new TaskCompletionSource<bool>();
            dt = Cls.GetDartApi(_stockCode, _stockDate);
            if (dt == null)
            {
                tcs.SetResult(true);
                return tcs.Task;
            }
            dataGridView2.DataSource = dt;
            for (int ix = 0; ix < dt.Columns.Count - 1; ix++)
            {

                if (ix == 3)
                {
                    dataGridView2.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft;
                    dataGridView2.Columns[ix].Width = 350;
                }
                else
                {
                    dataGridView2.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                    dataGridView2.Columns[ix].Width = 60;
                }
            }
            tcs.SetResult(true);
            return tcs.Task;
        }

        Task _t1;
        Task _t2;
        private void frmChartSub_Load(object sender, EventArgs e)
        {
            
        }

        public async void SettingForm(string stockCode , string stockDate)
        {
            if (_t1 != null) { _t1.Wait(); }
            if (_t2 != null) { _t2.Wait(); }
            _stockCode = stockCode;
            _stockDate = stockDate;
            _t1 = DoOpt100059Async();
            _t2 = DartApi();
            await _t2;
        }

        private void frmChartSub_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (_t1 != null) _t1.Wait();
            if (_t2 != null) _t2.Wait();
        }

        private void dataGridView2_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.ColumnIndex == 4)
            {
                System.Diagnostics.Process.Start("http://dart.fss.or.kr/dsaf001/main.do?rcpNo=" + dataGridView2.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString().Trim());
            }
        }

        private void frmChartSub_Shown(object sender, EventArgs e)
        {
            SettingForm(_stockCode, _stockDate);
        }

        private void frmChartSub_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Escape)
            {
                this.Close();
            }
        }
    }
}
