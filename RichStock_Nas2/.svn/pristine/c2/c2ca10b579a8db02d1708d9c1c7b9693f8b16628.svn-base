Imports PaikRichStock.Common
Imports System.Xml
Imports System.IO

Public Class ucVolumeAnalysis
    Private _MainStock As New PaikRichStock.Common.ucMainStockVer2
    Private _clsFunc As New PaikRichStock.Common.clsFunc
    Private _clsCombineCallOpt As New PaikRichStock.Common.clsCombineCallOpt

    Public Structure StructureGetStockInfo
        Public stockCode As String
        Public stockName As String

        Public Sub Init()
            stockCode = ""
            stockName = ""
        End Sub
    End Structure

    Private _StockInfo As StructureGetStockInfo

    Public WriteOnly Property StockInfo As StructureGetStockInfo
        Set(value As StructureGetStockInfo)
            _StockInfo = value
            GetXmlData(_StockInfo.stockCode, _StockInfo.stockName)
            'InitdtSaD()
            'InitdtAutoCalSaD()
            'GetXmlData(_StockInfo.stockCode, _StockInfo.stockName)
        End Set
    End Property

    Public WriteOnly Property MainStock As PaikRichStock.Common.ucMainStockVer2
        Set(value As PaikRichStock.Common.ucMainStockVer2)
            _MainStock = value
            _clsCombineCallOpt.MainStock = value
            AddHandler _clsCombineCallOpt.OnEventCombineOpt5981, AddressOf OnEventCombineOpt5981
        End Set
    End Property

    Private Sub ucSupplyDemandAnalysis_Load(sender As Object, e As EventArgs) Handles Me.Load
        
    End Sub

#Region " GetXmlData "
    Private _dt As New DataTable
    Private _dtCal As New DataTable

    Private Sub GetXmlData(ByVal stockCode As String, ByVal stockName As String)
        If _dt Is Nothing = False Then
            _dt.Clear()
            _dt.Reset()
            _dt = Nothing
            _dt = New DataTable
        End If

        If File.Exists("C:\Xml2\" & stockCode & "_" & stockName & ".xml") Then
            Dim confDate As String = ""

            Select Case CDateTime.WeekDayNames(CDateTime.FormatDate(Now.Date))
                Case "월요일"
                    confDate = CDateTime.FormatDate(DateAdd(DateInterval.Day, -3, Now.Date))
                Case "일요일"
                    confDate = CDateTime.FormatDate(DateAdd(DateInterval.Day, -2, Now.Date))
                Case Else
                    confDate = CDateTime.FormatDate(DateAdd(DateInterval.Day, -1, Now.Date))
            End Select

            Dim xmlFile As XmlReader
            Dim xmlFileSc As XmlReader
            xmlFile = XmlReader.Create("C:\Xml2\" & stockCode & "_" & stockName & ".xml", New XmlReaderSettings())
            xmlFileSc = XmlReader.Create("C:\Xml2\" & stockCode & "_" & stockName & ".xsd", New XmlReaderSettings())

            _dt.ReadXmlSchema(xmlFileSc)
            _dt.ReadXml(xmlFile)

            For i As Integer = 0 To _dt.Rows.Count - 1
                If Trim(_dt.Rows(i).Item("거래량").ToString()) <> "" Then Exit For

                If Trim(_dt.Rows(i).Item("거래량").ToString()) = "" Then
                    _dt.Rows.RemoveAt(0)
                End If
            Next

            If Trim(_dt.Rows(0).Item("일자")) < confDate Then
                _clsCombineCallOpt.CallOpt5981(stockCode, stockName)
            Else
                SdAnalysis()
            End If
        Else
            _clsCombineCallOpt.GetOpt10081(stockCode)
        End If
          
    End Sub
#End Region

    Private Sub OnEventCombineOpt5981(ByVal dt As DataTable)
        If _dt Is Nothing = False Then
            _dt.Reset()
        End If

        _dt = dt.Copy

        SdAnalysis()

    End Sub

#Region " 수급분석 "
    Private _ds2th As DataSet
    Private _ds As New DataSet

    Private Sub SdAnalysis()
        With _dt
            For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                .Columns.Add(modDataTable.opt10059_Cal(i) & "합최저점", System.Type.GetType("System.Int32"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "합최고점", System.Type.GetType("System.Int32"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "분산합비율", System.Type.GetType("System.Int16"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "금액최저점", System.Type.GetType("System.Int64"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "금액최고점", System.Type.GetType("System.Int64"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "분산금액비율", System.Type.GetType("System.Int16"))
            Next
        End With

        If _dtCal Is Nothing = False Then
            _dtCal.Reset()
        End If
        With _dtCal
            For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                .Columns.Add(modDataTable.opt10059_Cal(i) & "합최저점", System.Type.GetType("System.Int32"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "합최고점", System.Type.GetType("System.Int32"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "금액최저점", System.Type.GetType("System.Int64"))
                .Columns.Add(modDataTable.opt10059_Cal(i) & "금액최고점", System.Type.GetType("System.Int64"))
            Next
        End With

        Dim dr As DataRow

        With _dtCal

            dr = .NewRow

            For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                dr(modDataTable.opt10059_Cal(i) & "합최저점") = _dt.Compute("MIN(" & modDataTable.opt10059_Cal(i) & "합)", String.Empty)
                dr(modDataTable.opt10059_Cal(i) & "합최고점") = _dt.Compute("MAX(" & modDataTable.opt10059_Cal(i) & "합)", String.Empty)
                dr(modDataTable.opt10059_Cal(i) & "금액최저점") = _dt.Compute("MIN(" & modDataTable.opt10059_Cal(i) & "금액합)", String.Empty)
                dr(modDataTable.opt10059_Cal(i) & "금액최고점") = _dt.Compute("MAX(" & modDataTable.opt10059_Cal(i) & "금액합)", String.Empty)
            Next

            .Rows.Add(dr)

        End With

        With _dt
            For j As Integer = 0 To _dt.Rows.Count - 1
                For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)

                    .Rows(j).Item(modDataTable.opt10059_Cal(i) & "합최저점") = _dtCal.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합최저점")
                    .Rows(j).Item(modDataTable.opt10059_Cal(i) & "합최고점") = _dtCal.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합최고점")
                    .Rows(j).Item(modDataTable.opt10059_Cal(i) & "금액최저점") = _dtCal.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액최저점")
                    .Rows(j).Item(modDataTable.opt10059_Cal(i) & "금액최고점") = _dtCal.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액최고점")
                    .Rows(j).Item(modDataTable.opt10059_Cal(i) & "분산합비율") = CalDistribution(.Rows(j).Item(modDataTable.opt10059_Cal(i) & "합"), _
                                                                                           .Rows(j).Item(modDataTable.opt10059_Cal(i) & "합최저점"), _
                                                                                           .Rows(j).Item(modDataTable.opt10059_Cal(i) & "합최고점"))
                    .Rows(j).Item(modDataTable.opt10059_Cal(i) & "분산금액비율") = CalDistribution(.Rows(j).Item(modDataTable.opt10059_Cal(i) & "금액합"), _
                                                                                      .Rows(j).Item(modDataTable.opt10059_Cal(i) & "금액최저점"), _
                                                                                      .Rows(j).Item(modDataTable.opt10059_Cal(i) & "금액최고점"))


                Next
            Next
        End With

        _dt.Columns.RemoveAt(0)

        _clsFunc.DataTableMappingToDataGridView(_dt, dgvVolumeA)

        If _ds Is Nothing = False Then
            _ds.Reset()
        End If

        _ds = PaikRichStock.Common.clsFunc.DataGridViewBindedDtToDataSet(dgvVolumeA)

        DisplayChartBase()
        SupplyAndDemandAnalysis()
        NowStatusVolume()

    End Sub

    Private Function CalDistribution(ByVal value As Integer, ByVal minValue As Integer, ByVal MaxValue As Integer) As Integer
        If MaxValue = 0 Then Return 0
        If (MaxValue - minValue) = 0 Then Return 0

        Return CInt(Math.Abs(((value - minValue) / (MaxValue - minValue)) * 100))
    End Function
#End Region

#Region " DisplayChartBase "
    Private Sub DisplayChartBase()
        Dim intPoint As Integer = 0
        Dim high As Integer = 0
        Dim close As Integer = 0
        Dim low As Integer = 0

        With chartBase
            For j As Integer = 0 To .Series.Count - 1
                .Series(j).Points.Clear()
            Next

            For i As Integer = _dt.Rows.Count - 1 To 0 Step -1
                If high = 0 Then

                    high = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("고가").ToString())

                Else

                    If high < _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("고가").ToString()) Then
                        high = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("고가").ToString())
                    End If

                End If

                If low = 0 Then
                    low = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("저가").ToString())
                Else
                    If _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("저가").ToString()) <> 0 Then
                        If low > _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("저가").ToString()) Then
                            low = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("저가").ToString())
                        End If
                    End If
                End If

                .Series("Price").Points.AddXY(_dt.Rows(i).Item("일자"), _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("고가").ToString()))


                .Series("Price").Points(intPoint).YValues(1) = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("저가").ToString())
                .Series("Price").Points(intPoint).YValues(2) = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("시가").ToString())
                .Series("Price").Points(intPoint).YValues(3) = _clsFunc.RemovePlusMinus(_dt.Rows(i).Item("현재가").ToString())


                intPoint = intPoint + 1
            Next


            .ChartAreas("Price").AxisY.Minimum = CInt(low - (low * 0.1))
            .ChartAreas("Price").AxisY.Maximum = CInt(high + (high * 0.1))
            .ChartAreas("Price").AxisX.IsLabelAutoFit = True

        End With
    End Sub
#End Region

#Region " 기간별 수급 분석 "
    Private _dtGiganSd As New DataTable

    Public Structure CycleCalData
        Public WEEK_STARTDATE_1 As String ' 1주
        Public WEEK_STARTDATE_2 As String ' 2주
        Public WEEK_STARTDATE_3 As String ' 3주
        Public WEEK_STARTDATE_4 As String ' 4주

        Public MONTH_STARTDATE_1 As String ' 1달
        Public MONTH_STARTDATE_2 As String ' 2달
        Public MONTH_STARTDATE_3 As String ' 3달

        Public BUGI_STARTDATE_1 As String ' 1분기
        Public BUGI_STARTDATE_2 As String ' 2분기
        Public BUGI_STARTDATE_3 As String ' 3분기
        Public BUGI_STARTDATE_4 As String ' 4분기

        Public Sub Init()
            WEEK_STARTDATE_1 = ""
            WEEK_STARTDATE_2 = ""
            WEEK_STARTDATE_3 = ""
            WEEK_STARTDATE_4 = ""

            MONTH_STARTDATE_1 = ""
            MONTH_STARTDATE_2 = ""
            MONTH_STARTDATE_3 = ""

            BUGI_STARTDATE_1 = ""
            BUGI_STARTDATE_2 = ""
            BUGI_STARTDATE_3 = ""
            BUGI_STARTDATE_4 = ""
        End Sub
    End Structure

    Private Sub SupplyAndDemandAnalysis()
        Dim strCycleCalData As New CycleCalData
        Dim firstDate As String = _dt.Rows(0).Item("일자")
        Dim firstWeekName As String = CDateTime.WeekDayNames(_dt.Rows(0).Item("일자"), True)
        Dim firstBugi As String = ""

        Dim intWeekAdd As Integer = 0

        If _dtGiganSd Is Nothing = False Then
            _dtGiganSd.Reset()

            With _dtGiganSd

                .Columns.Add("기간")

                For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                    .Columns.Add(modDataTable.opt10059_Cal(i) & "합")
                    .Columns.Add(modDataTable.opt10059_Cal(i) & "금액합")
                Next

            End With

            With strCycleCalData
                Select Case firstWeekName
                    Case "월"
                        intWeekAdd = -7
                    Case "화"
                        intWeekAdd = -8
                    Case "수"
                        intWeekAdd = -9
                    Case "목"
                        intWeekAdd = -10
                    Case "금"
                        intWeekAdd = -11
                End Select

                .WEEK_STARTDATE_1 = CDateTime.FormatDate(DateAdd(DateInterval.Day, intWeekAdd, CDate(CDateTime.FormatDate(firstDate, "-"))))
                .WEEK_STARTDATE_2 = CDateTime.FormatDate(DateAdd(DateInterval.Day, -7, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_1, "-"))))
                .WEEK_STARTDATE_3 = CDateTime.FormatDate(DateAdd(DateInterval.Day, -7, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_2, "-"))))
                .WEEK_STARTDATE_4 = CDateTime.FormatDate(DateAdd(DateInterval.Day, -7, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_3, "-"))))

                .MONTH_STARTDATE_1 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -1, CDate(CDateTime.FormatDate(firstDate, "-")))), 1, 6) & "01"
                .MONTH_STARTDATE_2 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -2, CDate(CDateTime.FormatDate(firstDate, "-")))), 1, 6) & "01"
                .MONTH_STARTDATE_3 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -3, CDate(CDateTime.FormatDate(firstDate, "-")))), 1, 6) & "01"

                Select Case Mid(firstDate, 5, 2)
                    Case "01", "02", "03"
                        firstBugi = Mid(firstDate, 1, 4) & "0101"
                    Case "04", "05", "06"
                        firstBugi = Mid(firstDate, 1, 4) & "0401"
                    Case "07", "08", "09"
                        firstBugi = Mid(firstDate, 1, 4) & "0701"
                    Case "10", "11", "12"
                        firstBugi = Mid(firstDate, 1, 4) & "1001"
                End Select

                .BUGI_STARTDATE_1 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -3, CDate(CDateTime.FormatDate(firstBugi, "-")))), 1, 6) & "01"
                .BUGI_STARTDATE_2 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -6, CDate(CDateTime.FormatDate(firstBugi, "-")))), 1, 6) & "01"
                .BUGI_STARTDATE_3 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -9, CDate(CDateTime.FormatDate(firstBugi, "-")))), 1, 6) & "01"
                .BUGI_STARTDATE_4 = Mid(CDateTime.FormatDate(DateAdd(DateInterval.Month, -12, CDate(CDateTime.FormatDate(firstBugi, "-")))), 1, 6) & "01"

            End With

            With _dtGiganSd
                DtGiganSdAdd("이번주", CDateTime.FormatDate(DateAdd(DateInterval.Day, 6, CDate(CDateTime.FormatDate(strCycleCalData.WEEK_STARTDATE_1, "-")))), CDateTime.FormatDate(Now.Date), 0)
                DtGiganSdAdd("5일", "", "", 5)
                DtGiganSdAdd("10일", "", "", 10)
                DtGiganSdAdd("20일", "", "", 20)
                DtGiganSdAdd("60일", "", "", 60)
                DtGiganSdAdd("120일", "", "", 120)
                With strCycleCalData
                    DtGiganSdAdd("1주", .WEEK_STARTDATE_1, CDateTime.FormatDate(DateAdd(DateInterval.Day, 5, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_1, "-")))), 0)
                    DtGiganSdAdd("2주", .WEEK_STARTDATE_2, CDateTime.FormatDate(DateAdd(DateInterval.Day, 5, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_2, "-")))), 0)
                    DtGiganSdAdd("3주", .WEEK_STARTDATE_3, CDateTime.FormatDate(DateAdd(DateInterval.Day, 5, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_3, "-")))), 0)
                    DtGiganSdAdd("4주", .WEEK_STARTDATE_4, CDateTime.FormatDate(DateAdd(DateInterval.Day, 5, CDate(CDateTime.FormatDate(.WEEK_STARTDATE_4, "-")))), 0)

                    DtGiganSdAdd("이달", Mid(firstDate, 1, 6) & "01", Mid(firstDate, 1, 6) & "31", 0)
                    DtGiganSdAdd("1달", Mid(.MONTH_STARTDATE_1, 1, 6) & "01", Mid(.MONTH_STARTDATE_1, 1, 6) & "31", 0)
                    DtGiganSdAdd("2달", Mid(.MONTH_STARTDATE_2, 1, 6) & "01", Mid(.MONTH_STARTDATE_2, 1, 6) & "31", 0)
                    DtGiganSdAdd("3달", Mid(.MONTH_STARTDATE_3, 1, 6) & "01", Mid(.MONTH_STARTDATE_3, 1, 6) & "31", 0)

                    DtGiganSdAdd("이번분기", Mid(firstDate, 1, 6) & "01", Mid(firstDate, 1, 6) & "31", 0)
                    DtGiganSdAdd("1분기", .BUGI_STARTDATE_1, Mid(.BUGI_STARTDATE_1, 1, 6) & "31", 0)
                    DtGiganSdAdd("2분기", .BUGI_STARTDATE_2, Mid(.BUGI_STARTDATE_2, 1, 6) & "31", 0)
                    DtGiganSdAdd("3분기", .BUGI_STARTDATE_3, Mid(.BUGI_STARTDATE_3, 1, 6) & "31", 0)
                    DtGiganSdAdd("4분기", .BUGI_STARTDATE_4, Mid(.BUGI_STARTDATE_4, 1, 6) & "31", 0)

                    For i As Integer = Mid(_dt.Rows(0).Item("일자"), 1, 4) To Mid(_dt.Rows(_dt.Rows.Count - 1).Item("일자"), 1, 4) Step -1
                        DtGiganSdAdd(i.ToString() & "년", i.ToString() & "0101", i.ToString() & "1231", 0)
                    Next

                End With

            End With

        End If

        _clsFunc.DataTableMappingToDataGridView(_dtGiganSd, dgvVolumeB)

    End Sub

    Private Sub DtGiganSdAdd(ByVal giganName As String, ByVal fromDate As String, ByVal toDate As String, ByVal gigan As Integer)
        Dim dr As DataRow
        If fromDate = "" Then
            With _dtGiganSd
                dr = .NewRow

                dr("기간") = giganName

                For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                    dr(modDataTable.opt10059_Cal(i) & "합") = DtCalGiganSumQty(gigan, modDataTable.opt10059_Cal(i))
                    dr(modDataTable.opt10059_Cal(i) & "금액합") = DtCalGiganSumQty(gigan, modDataTable.opt10059_Cal(i) & "금액")
                Next

                .Rows.Add(dr)
            End With
        Else
            With _dtGiganSd
                dr = .NewRow

                dr("기간") = giganName & "일"

                For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                    dr(modDataTable.opt10059_Cal(i) & "합") = DtCalExactGiganSumQty(fromDate, toDate, modDataTable.opt10059_Cal(i))
                    dr(modDataTable.opt10059_Cal(i) & "금액합") = DtCalExactGiganSumQty(fromDate, toDate, modDataTable.opt10059_Cal(i))
                Next

                .Rows.Add(dr)

            End With


        End If
    End Sub
#End Region

#Region " DtCalGiganSumQty "
    Private Function DtCalGiganSumQty(ByVal value As Integer, ByVal colume As String) As Integer
        Dim returnSumValue As Integer = 0

        With _dt
            For i As Integer = 0 To value - 1
                returnSumValue = returnSumValue + .Rows(i).Item(colume)
            Next
        End With

        Return returnSumValue

    End Function

    Private Function DtCalExactGiganSumQty(ByVal fromDate As String, ByVal toDate As String, ByVal colume As String) As Integer
        Dim returnSumValue As Integer = 0

        returnSumValue = _dt.Compute("SUM(" & colume & ")", "일자 >= " & "'" & fromDate & "'" & " and 일자 <= " & "'" & toDate & "'")

        Return returnSumValue

    End Function
#End Region

#Region " NowStatusVolume "
    Private _dtNow As New DataTable

    Private Sub NowStatusVolume()
        Dim dr As DataRow

        If _dtNow Is Nothing = False Then
            _dtNow.Reset()
        End If

        With _dtNow
            .Columns.Clear()
            .Columns.Add("종목투자자", System.Type.GetType("System.String"))
            .Columns.Add("현재보유금액", System.Type.GetType("System.Int32"))
            .Columns.Add("최대보유금액", System.Type.GetType("System.Int32"))
            .Columns.Add("최소보유금액", System.Type.GetType("System.Int32"))
            .Columns.Add("분산금액비율", System.Type.GetType("System.Int16"))
            .Columns.Add("현재보유량", System.Type.GetType("System.Int32"))
            .Columns.Add("최대보유량", System.Type.GetType("System.Int32"))
            .Columns.Add("최소보유량", System.Type.GetType("System.Int32"))
            .Columns.Add("분산합비율", System.Type.GetType("System.Int16"))
            .Columns.Add("보유비율", System.Type.GetType("System.Int32"))
            .Columns.Add("평균가", System.Type.GetType("System.Int32"))

            For i As Integer = 0 To UBound(modDataTable.opt10059_Cal)
                dr = .NewRow

                dr("종목투자자") = modDataTable.opt10059_Cal(i)
                dr("현재보유금액") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액합")
                dr("최대보유금액") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액최고점")
                dr("최소보유금액") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액최저점")
                dr("분산금액비율") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "분산금액비율")
                dr("현재보유량") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합")
                dr("최대보유량") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합최고점")
                dr("최소보유량") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합최저점")
                dr("분산합비율") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "분산합비율")
                dr("보유비율") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합") / _dt.Rows(0).Item("유통량") * 100

                If _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합") = 0 Then
                    dr("평균가") = 0
                Else
                    dr("평균가") = _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "금액합") / _dt.Rows(0).Item(modDataTable.opt10059_Cal(i) & "합") * 1000000
                End If

                .Rows.Add(dr)

            Next

        End With

        Dim k As Integer = _dtNow.Compute("Max(최대보유금액)", "종목투자자 <> '개인투자자' and 종목투자자 <> '기관계' and 종목투자자 <> '기타법인'")

        For Each dr In _dtNow.Select(String.Format("최대보유금액 = '{0}' And 종목투자자 <> '개인투자자' and 종목투자자 <> '기관계' and 종목투자자 <> '기타법인'", k))
            lblJudo.Text = dr("종목투자자")
            lblJudoAvg.Text = dr("평균가")
            Exit For
        Next

        For Each dr In _dtGiganSd.Rows
            Select Case dr("기간")
                Case "5일"
                    lblJudo5Day.Text = dr(lblJudo.Text & "합")
                Case "10일"
                    lblJudo10Day.Text = dr(lblJudo.Text & "합")
                Case "20일"
                    lblJudo20Day.Text = dr(lblJudo.Text & "합")
                Case "60일"
                    lblJudo60Day.Text = dr(lblJudo.Text & "합")
            End Select
        Next

        _clsFunc.DataTableMappingToDataGridView(_dtNow, dgvVolumeC)

    End Sub
#End Region

#Region " Control Event "
    Public Event OnSelectVolumeC(ByVal columnName As PaikRichStock.UcForm.ucVolumeChartBase.Struture_ColumnName, ByVal ds As DataSet, ByVal ds2th As DataSet)

    Private Sub dgvVolumeC_CellDoubleClick(sender As Object, e As DataGridViewCellEventArgs) Handles dgvVolumeC.CellDoubleClick
        With dgvVolumeC
            If Trim(.Rows(e.RowIndex).Cells(0).Value) = "" Then
                Exit Sub
            End If

            Dim ColumeName As New PaikRichStock.UcForm.ucVolumeChartBase.Struture_ColumnName


            ColumeName.VolumeSumName = Trim(.Rows(e.RowIndex).Cells(0).Value) & "합"
            ColumeName.AvgPriceSum = Trim(.Rows(e.RowIndex).Cells(0).Value) & "금액합"
            ColumeName.Title = Trim(.Rows(e.RowIndex).Cells(0).Value)
            ColumeName.DistributeVolume = Trim(.Rows(e.RowIndex).Cells(0).Value) & "분산합비율"

            RaiseEvent OnSelectVolumeC(ColumeName, _ds, _ds2th)

        End With
    End Sub
#End Region

End Class