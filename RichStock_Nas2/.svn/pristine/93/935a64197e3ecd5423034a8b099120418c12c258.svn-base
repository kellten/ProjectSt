using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using PaikRichStock.Common;
using System.Windows.Forms.DataVisualization.Charting;

namespace Common
{
    public partial class UcFinance : UserControl
    {
        private DataSet _dsDay;
        private DataAccess _DataAcc = new DataAccess();
        private PaikRichStock.Common.ucMainStockVer2 _ucMainStockVer2;
        private DataSet _stockBaseInfo;
        private string _stockCode = "";
        private DataSet _dsLine;
        private DataSet _dsCredit;
        private string[] _strCredit = {"일자" , "신규" , "상환" , "잔고" , "금액" , "공여율" , "잔고율"};
        private DataSet _dsGong;
        private string[] _strGong = { "일자", "거래량", "비율", "금액", "평균가" };
        private DataSet _dsBuySell;
        private string[] _strBuySell = { "일자", "개인", "외인", "기관", "금융투자","보험"  ,"투신"	 ,   "기타금융",	"은행"	   , "연기금등"	,"사모펀드"	,"국가"	    ,"기타법인"	,"내외국인"	};

        public UcFinance()
        {
            InitializeComponent();
            _stockCode = "";
        }

        public PaikRichStock.Common.ucMainStockVer2 UcStockMain {
            get { return _ucMainStockVer2; }
            set { 
                _ucMainStockVer2 = value;
            }
        }

        public string StockCode
        {
            get { return _stockCode; }
            set { _stockCode = value; InitWindow(); }
        }
        public DataSet Prop_StockBaseInfo
        {
            get { return _stockBaseInfo; }
            set
            {
                if (_stockCode == "") return;
                _stockBaseInfo = value;
                SetCompanyInfo();
                SetTheme();
            }
        }
        public DataSet Prop_DayDs
        {
            set
            {
                if (_stockCode == "") return;
                _dsDay = value;
            }
        }

        public DataSet Prop_RealDs
        {
            set
            {
                if (_stockCode == "") return;
                SetRealDs(value);
            }
        }

        private void InitWindow()
        {

            txtCompanyName.Text = "";
            txtAddress.Text = "";
            txtCeo.Text = "";
            txtSector.Text = "";
            txtHomepage.Text = "";
            txtSangJangDate.Text = "";
            txtMainProduct.Text = "";
            txtETC.Text = "";
            txtRemark.Text = "";
            txt주주.Text = "";
            dgImWon.RowCount = 1;
            txt결산월.Text = "";
            txt액면가.Text = "";
            txt자본금.Text = "";
            txt상장주식.Text = "";
            txt신용비율.Text = "";
            txt시가총액.Text = "";
            txt외인소진률.Text = "";
            txtPER.Text = "";
            txtEPS.Text = "";
            txtROE.Text = "";
            txtPBR.Text = "";
            txtEV.Text = "";
            txtBPS.Text = "";
            txt매출액.Text = "";
            txt영업이익.Text = "";
            txt당기순이익.Text = "";
            txt250최고.Text = "";
            txt250최고가대비율.Text = "";
            txt250최고가일.Text = "";
            txt연중최고.Text = "";
            txt250최저.Text = "";
            txt250최저가대비율.Text = "";
            txt250최저가일.Text = "";
            txt연중최저.Text = "";
            txt현재가.Text = "";
            txt시가.Text = "";
            txt고가.Text = "";
            txt저가.Text = "";
            dgvTheme.RowCount = 1;
            dgSimple.RowCount = 1;
            dgSimple.Rows.Insert(0, 1);
            dgLine.RowCount = 1;
            dgLine.Rows.Insert(0, 1);
            dgHistory.DataSource = null;
            dgUDBuySell.DataSource = null;
            dgUDCredit.DataSource = null;
            dgUDDart.DataSource = null;
            if (_stockCode != null && _stockCode != "")
            {
                Double sum = 0;
                _DataAcc.Open();
                _dsBuySell = _DataAcc.p_stock_buysell_state_query("1", _stockCode, "" , true , null , null);
                _dsCredit = _DataAcc.p_stock_credit_query("1", _stockCode, "", true, null, null);
                _dsGong = _DataAcc.p_stock_gong_query("1", _stockCode, "", true, null, null);
                _dsLine = _DataAcc.p_stock_day_data_line_query("1", _stockCode, "", true, null, null);

                if (_dsBuySell.Tables[0].Rows.Count > 4)
                {
                    sum = Convert.ToDouble(_dsBuySell.Tables[0].Compute("SUM(p_tu)", String.Format("stock_date >= '{0}'", _dsBuySell.Tables[0].Rows[4]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C개인5.Index].Value = sum;
                    sum = Convert.ToDouble(_dsBuySell.Tables[0].Compute("SUM(f_tu)", String.Format("stock_date >= '{0}'", _dsBuySell.Tables[0].Rows[4]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C외인5.Index].Value = sum;
                    sum = Convert.ToDouble(_dsBuySell.Tables[0].Compute("SUM(k_tu)", String.Format("stock_date >= '{0}'", _dsBuySell.Tables[0].Rows[4]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C기관5.Index].Value = sum;
                }
                if (_dsBuySell.Tables[0].Rows.Count > 9)
                {
                    sum = Convert.ToDouble(_dsBuySell.Tables[0].Compute("SUM(p_tu)", String.Format("stock_date >= '{0}'", _dsBuySell.Tables[0].Rows[9]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C개인10.Index].Value = sum;
                    sum = Convert.ToDouble(_dsBuySell.Tables[0].Compute("SUM(f_tu)", String.Format("stock_date >= '{0}'", _dsBuySell.Tables[0].Rows[9]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C외인10.Index].Value = sum;
                    sum = Convert.ToDouble(_dsBuySell.Tables[0].Compute("SUM(k_tu)", String.Format("stock_date >= '{0}'", _dsBuySell.Tables[0].Rows[9]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C기관10.Index].Value = sum;
                }
                if (_dsCredit.Tables[0].Rows.Count > 4)
                {
                    dgSimple.Rows[0].Cells[C신용5.Index].Value = _dsCredit.Tables[0].Rows[4]["credit_jango_rate"].ToString().Trim();
                }
                if (_dsCredit.Tables[0].Rows.Count > 9)
                {
                    dgSimple.Rows[0].Cells[C신용10.Index].Value = _dsCredit.Tables[0].Rows[9]["credit_jango_rate"].ToString().Trim();
                }
                if (_dsGong.Tables[0].Rows.Count > 4)
                {
                    sum = Convert.ToDouble(_dsGong.Tables[0].Compute("SUM(gong_volume)", String.Format("stock_date >= '{0}'", _dsGong.Tables[0].Rows[4]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C공매도5.Index].Value = sum;
                }
                if (_dsGong.Tables[0].Rows.Count > 9)
                {
                    sum = Convert.ToDouble(_dsGong.Tables[0].Compute("SUM(gong_volume)", String.Format("stock_date >= '{0}'", _dsGong.Tables[0].Rows[9]["stock_date"].ToString().Trim())));
                    dgSimple.Rows[0].Cells[C공매도10.Index].Value = sum;
                }
                _DataAcc.DisConnect();
            }
            if (_dsDay != null)
            {
                DataView dvDay = new DataView(_dsDay.Tables[0]);
                dvDay.RowFilter = "STOCK_CODE = '" + _stockCode + "' AND (HL_RATE > 10 OR DAY_RATE > 10 OR DAY_RATE < -10) ";
                dvDay.Sort = "STOCK_DATE DESC";
                dgUpDownDay.RowCount = 1;
                foreach (DataRowView dr in dvDay)
                {
                    dgUpDownDay.RowCount++;
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD일자.Index].Value = dr["STOCK_DATE"].ToString();
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD종가.Index].Value = dr["END_PRICE"].ToString();
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD시가.Index].Value = dr["S_PRICE"].ToString();
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD고가.Index].Value = dr["H_PRICE"].ToString();
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD저가.Index].Value = dr["L_PRICE"].ToString();
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD대비.Index].Value = (int)Convert.ToInt32(dr["END_PRICE"].ToString()) - Convert.ToInt32(dr["PRE_E_PRICE"].ToString());
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD등락율.Index].Value = dr["DAY_RATE"].ToString();
                    dgUpDownDay.Rows[dgUpDownDay.RowCount - 2].Cells[CD등락폭.Index].Value = dr["HL_RATE"].ToString();
                }
            }
        }

        private void SetTheme()
        {
            int row = 0;
            if (_ucMainStockVer2 == null) return;
            if (_stockBaseInfo == null) return;
            DataSet ds = _DataAcc.p_stock_theme_query("1", _stockCode,"", false, null, null);

            foreach (DataRow dr in ds.Tables[0].Rows)
            {
                if (row >= dgvTheme.RowCount - 1) dgvTheme.RowCount++;
                dgvTheme.Rows[row].Cells[CTheme.Index].Value = dr["theme_name"].ToString();
                dgvTheme.Rows[row].Cells[CEtc.Index].Value = dr["etc"].ToString();
                row += 1;
            }
        }

        private void SetCompanyInfo()
        {
            if (_ucMainStockVer2 == null) return;
            if (_stockBaseInfo == null) return;
            DataRow dr = _stockBaseInfo.Tables[0].Rows[0];

            txt결산월.Text = dr["결산월"].ToString().Trim();
            txt액면가.Text = dr["액면가"].ToString().Trim();
            txt자본금.Text = dr["자본금"].ToString().Trim();
            txt상장주식.Text = dr["상장주식"].ToString().Trim();
            txt신용비율.Text = dr["신용비율"].ToString().Trim();
            txt시가총액.Text = dr["시가총액"].ToString().Trim();
            txt외인소진률.Text = dr["외인소진률"].ToString().Trim();
            txtPER.Text = dr["PER"].ToString().Trim();
            txtEPS.Text = dr["EPS"].ToString().Trim();
            txtROE.Text = dr["ROE"].ToString().Trim();
            txtPBR.Text = dr["PBR"].ToString().Trim();
            txtEV.Text = dr["EV"].ToString().Trim();
            txtBPS.Text = dr["BPS"].ToString().Trim();
            txt매출액.Text = dr["매출액"].ToString().Trim();
            txt영업이익.Text = dr["영업이익"].ToString().Trim();
            txt당기순이익.Text = dr["당기순이익"].ToString().Trim();
            txt250최고.Text = dr["250최고"].ToString().Trim();
            txt250최고가대비율.Text = dr["250최고가대비율"].ToString().Trim();
            txt250최고가일.Text = dr["250최고가일"].ToString().Trim();
            txt연중최고.Text = dr["연중최고"].ToString().Trim();
            txt250최저.Text = dr["250최저"].ToString().Trim();
            txt250최저가대비율.Text = dr["250최저가대비율"].ToString().Trim();
            txt250최저가일.Text = dr["250최저가일"].ToString().Trim();
            txt연중최저.Text = dr["연중최저"].ToString().Trim();
            txt시가.Text = dr["시가"].ToString().Trim();
            txt고가.Text = dr["고가"].ToString().Trim();
            txt저가.Text = dr["저가"].ToString().Trim();
            txt현재가.Text = dr["현재가"].ToString().Trim(); //위에 시고저가 셋팅이 되어야 에러가 나지 않는다.

            DataSet dsCompany = _DataAcc.p_company_info_query("1", _stockCode , false , null  , null);
            if (dsCompany == null) return;
            if (dsCompany.Tables[0].Rows.Count < 1) return;
            dr = dsCompany.Tables[0].Rows[0];
            txtCompanyName.Text = _ucMainStockVer2._allStockDataset.Tables["STOCKLIST"].Select("STOCK_CODE = '" + _stockCode + "'")[0]["STOCK_NAME"].ToString().Trim();
            txtAddress.Text = dr["ADDRESS"].ToString().Trim();
            txtCeo.Text = dr["CEO"].ToString().Trim();
            txtSector.Text = dr["CLASS_GB"].ToString().Trim();
            txtHomepage.Text = dr["HOMEPAGE"].ToString().Trim();
            txtSangJangDate.Text = dr["SANGJANG_DATE"].ToString().Trim();
            txtMainProduct.Text = dr["MAIN_PRODUCT"].ToString().Trim();
            txtETC.Text = dr["ETC"].ToString().Trim();
            txtRemark.Text = dr["REMARK"].ToString().Trim().Replace("-", "\r\n\r\n-").Substring(3);
            txt주주.Text = dr["JUJU"].ToString().Trim();
            int row = 0;
            foreach (DataRow drCEO in dsCompany.Tables[0].Rows)
            {
                if (row >= dgImWon.RowCount - 1) dgImWon.RowCount += 1;
                dgImWon.Rows[row].Cells["이름"].Value = drCEO["NAME"].ToString().Trim();
                dgImWon.Rows[row].Cells["직급"].Value = drCEO["GRADE"].ToString().Trim();
                dgImWon.Rows[row].Cells["경력"].Value = drCEO["CAREER"].ToString().Trim();
                dgImWon.Rows[row].Cells["의결주식수"].Value = drCEO["POWER_STOCK"].ToString().Trim() == "" ? 0 : Decimal.Parse(drCEO["POWER_STOCK"].ToString().Trim());
                row++;
            }
            dgImWon.Sort(dgImWon.Columns["의결주식수"], ListSortDirection.Descending);
            webBrowser1.Navigate("http://finance.naver.com/item/coinfo.nhn?code=" + _stockCode);
            
        }

        private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
        {
            if (webBrowser1.Url.AbsoluteUri.IndexOf("http://finance.naver.com/item/coinfo.nhn?code=") > -1) { 
                webBrowser1.Document.Window.ScrollTo(0, webBrowser1.Document.Body.ScrollRectangle.Height / 2);
            }
            else if (
                webBrowser1.Url.AbsoluteUri.IndexOf("http://finance.naver.com/item/fchart.nhn?code=") > -1 ||
                webBrowser1.Url.AbsoluteUri.IndexOf("http://finance.naver.com/item/sise.nhn?code=") > -1 ||
                webBrowser1.Url.AbsoluteUri.IndexOf("http://finance.naver.com/item/frgn.nhn?code=") > -1 ||
                webBrowser1.Url.AbsoluteUri.IndexOf("http://finance.naver.com/item/board.nhn?code=") > -1 
                )
            {
                webBrowser1.Document.Window.ScrollTo(0, webBrowser1.Document.Body.ScrollRectangle.Height / 6);
            }
        }

        private void btnChart_Click(object sender, EventArgs e)
        {
            //webBrowser1.Navigate("http://finance.naver.com/item/fchart.nhn?code=" + _stockCode);
            Chart.frmChart frmChart = new Chart.frmChart();
            frmChart.MainStock = _ucMainStockVer2;
            frmChart.GetChartData(_stockCode);
            frmChart.Text = txtCompanyName.Text + "(" + _stockCode + ")";
            frmChart.Show();
        }

        private void btnFinance_Click(object sender, EventArgs e)
        {
            webBrowser1.Navigate("http://finance.naver.com/item/coinfo.nhn?code=" + _stockCode);
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
            string themeName = "";
            string etc = "";
            _DataAcc.p_company_info_Add("UR", _stockCode, txt주주.Text.Trim() , txtSector.Text.Trim(), txtCeo.Text.Trim(), "", "", txtSangJangDate.Text.Trim(), "", "", txtHomepage.Text.Trim(), txtAddress.Text.Trim(), "", "", "","", txtMainProduct.Text.Trim(),txtETC.Text.Trim(), txtRemark.Text.Trim().Replace("\r\n" , ""), false, null, null);

            mySqlDbConn.Open();
            mySqlDbConn.ExecuteNonQuery(String.Format("delete from stock_theme where stock_code = '{0}'", _stockCode),null, CommandType.Text);
            for (int row = 0; row < dgvTheme.Rows.Count - 1; row++)
            {
                if (dgvTheme.Rows[row].Cells[CTheme.Index].Value == null) continue;
                themeName = dgvTheme.Rows[row].Cells[CTheme.Index].Value.ToString().Trim();
                if (dgvTheme.Rows[row].Cells[CEtc.Index].Value != null) {
                    etc = dgvTheme.Rows[row].Cells[CEtc.Index].Value.ToString().Trim();
                }
                mySqlDbConn.ExecuteNonQuery(String.Format("insert into stock_theme (stock_code , theme_name , deung_date , etc) values ('{0}','{1}','{2}','{3}')", _stockCode, themeName , DateTime.Now.ToString("yyyyMMdd") , etc) , null , CommandType.Text);
            }
            mySqlDbConn.Close();
        }

        private void SetRealDs(DataSet ds)
        {
            DataRow dr = ds.Tables[0].Rows[0];

            txt현재가.Text = dr["현재가"].ToString();
            txt고가.Text = dr["고가"].ToString();
            txt저가.Text = dr["저가"].ToString();
            txt거래량.Text = dr["누적거래량"].ToString();
        }

        private void txt현재가_TextChanged(object sender, EventArgs e)
        {
            TextBox txtObj = (TextBox)sender;
            if (txtObj.Text.Trim() == "") return;
            if (txtObj.Text.IndexOf("+") < 0 && txtObj.Text.IndexOf("-") < 0) { txtObj.ForeColor = System.Drawing.Color.Empty; return; }
            Decimal num = Decimal.Parse(txtObj.Text.Trim());
            if (num < 0) txtObj.ForeColor = System.Drawing.Color.Blue;
            else if (num > 0) txtObj.ForeColor = System.Drawing.Color.Red;
            else txtObj.ForeColor = System.Drawing.Color.Empty;

            if (txtObj.Name != txt현재가.Name) return;
            if (txt현재가.Text == "" || txt저가.Text == "" || txt고가.Text == "" || txt시가.Text == "") return;
            int 현재가 = Math.Abs(Convert.ToInt32(txt현재가.Text));
            int 저가 = Math.Abs(Convert.ToInt32(txt저가.Text));
            int 고가 = Math.Abs(Convert.ToInt32(txt고가.Text));
            int 시가 = Math.Abs(Convert.ToInt32(txt시가.Text));
            Double stdPrice = 0;
            Double firstL = 0;
            Double firstH = 0;
            string colName = "";
            string up = "";
            string down = "";

            DataRow dr;
            DataRow drNew;
            DataTable dt = new DataTable("PRICE");
            dt.Columns.Add("PRICE" , Type.GetType("System.Double"));
            
            if (_dsLine.Tables[0].Rows.Count > 0)
            {
                dr = _dsLine.Tables[0].Rows[0];
                dgLine.Rows[0].Cells[CRSI.Index].Value = dr["RSI"];
                for (int i = 0; i < _dsLine.Tables[0].Columns.Count; i++)
                {
                    colName = _dsLine.Tables[0].Columns[i].ToString();
                    if (colName.IndexOf("box") > -1 
                        //|| (colName.IndexOf("line") > -1 && Cls.Right(colName ,1) != "3" && Cls.Right(colName,1) != "5" && Cls.Right(colName,2) != "10")
                        )
                    {
                        drNew = dt.Rows.Add();
                        drNew["PRICE"] = dr[colName].ToString();
                    }
                    if (colName.IndexOf("line") > -1)
                    {
                        stdPrice = Convert.ToDouble(dr[colName].ToString());
                        if (저가 < stdPrice && stdPrice < 현재가)
                        {
                            up += colName.Length == 5 ? Cls.Right(colName, 1) : Cls.Right(colName, 2);
                            up += ",";
                        }
                        if (시가 > stdPrice && stdPrice > 현재가)
                        {
                            down += colName.Length == 5 ? Cls.Right(colName, 1) : Cls.Right(colName, 2);
                            down += ",";
                        }
                    }
                }
            }

            if (dgLine.Rows[0].Cells[C돌파.Index].Value == null || up != dgLine.Rows[0].Cells[C돌파.Index].Value.ToString())
                dgLine.Rows[0].Cells[C돌파.Index].Value = up;

            if (dgLine.Rows[0].Cells[C깨짐.Index].Value == null || down != dgLine.Rows[0].Cells[C깨짐.Index].Value.ToString())
                dgLine.Rows[0].Cells[C깨짐.Index].Value = down;

            DataView dv = new DataView(dt);
            dv.Sort = "PRICE ASC";
            foreach (DataRowView drv in dv)
            {
                if (현재가 < Convert.ToDouble(drv["PRICE"].ToString()))
                {
                    if (dgLine.Rows[0].Cells[C1차저항.Index].Value == null)
                    {
                        dgLine.Rows[0].Cells[C1차저항.Index].Value = drv["PRICE"].ToString();
                        firstH = Convert.ToDouble(drv["PRICE"].ToString());
                    }
                    else
                    {
                        if (firstH < Convert.ToDouble(drv["PRICE"].ToString())) {
                            dgLine.Rows[0].Cells[C2차저항.Index].Value = drv["PRICE"].ToString();
                            break;
                        }
                    }
                }
            }
            dv.Sort = "PRICE DESC";
            foreach (DataRowView drv in dv)
            {
                if (현재가 > Convert.ToDouble(drv["PRICE"].ToString()))
                {
                    if (dgLine.Rows[0].Cells[C1차지지.Index].Value == null)
                    {
                        dgLine.Rows[0].Cells[C1차지지.Index].Value = drv["PRICE"].ToString();
                        firstL = Convert.ToDouble(drv["PRICE"].ToString());
                    }
                    else
                    {
                        if (firstL > Convert.ToDouble(drv["PRICE"].ToString()))
                        {
                            dgLine.Rows[0].Cells[C2차지지.Index].Value = drv["PRICE"].ToString();
                            break;
                        }
                    }
                }
            }
        }

        private void btnDart_Click(object sender, EventArgs e)
        {
            webBrowser1.Navigate("http://dart.fss.or.kr/html/search/SearchCompany_M2.html?textCrpNM=" + _stockCode);
        }

        private void btn시세_Click(object sender, EventArgs e)
        {
            webBrowser1.Navigate("http://finance.naver.com/item/sise.nhn?code=" + _stockCode);
        }

        private void btn매동_Click(object sender, EventArgs e)
        {
            webBrowser1.Navigate("http://finance.naver.com/item/frgn.nhn?code=" + _stockCode);
        }

        private void btn토론_Click(object sender, EventArgs e)
        {
            webBrowser1.Navigate("http://finance.naver.com/item/board.nhn?code=" + _stockCode);
        }

        private void btn분석_Click(object sender, EventArgs e)
        {
            grp분석.Visible = !grp분석.Visible;
        }


        private void dgSimple_CellContentDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            
        }


        private void dgLine_CellContentDoubleClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void dgSimple_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            dgHistory.DataSource = null;
            if (e.ColumnIndex == C개인5.Index || e.ColumnIndex == C개인10.Index || e.ColumnIndex == C외인5.Index || e.ColumnIndex == C외인10.Index || e.ColumnIndex == C기관5.Index || e.ColumnIndex == C기관10.Index)
            {
                dgHistory.DataSource = _dsBuySell.Tables[0];
                for (int ix = 0; ix < _strBuySell.Length; ix++)
                {
                    dgHistory.Columns[ix].HeaderText = _strBuySell[ix];
                    dgHistory.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                    if (ix == 0) dgHistory.Columns[ix].Width = 60;
                    else dgHistory.Columns[ix].Width = 40;
                    
                }
            }
            else if (e.ColumnIndex == C공매도5.Index || e.ColumnIndex == C공매도10.Index)
            {
                dgHistory.DataSource = _dsGong.Tables[0];
                for (int ix = 0; ix < _strGong.Length; ix++)
                {
                    dgHistory.Columns[ix].HeaderText = _strGong[ix];
                    dgHistory.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                    dgHistory.Columns[ix].Width = 60;
                }
            }
            else if (e.ColumnIndex == C신용5.Index || e.ColumnIndex == C신용10.Index)
            {
                dgHistory.DataSource = _dsCredit.Tables[0];
                for (int ix = 0; ix < _strCredit.Length; ix++)
                {
                    dgHistory.Columns[ix].HeaderText = _strCredit[ix];
                    dgHistory.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                    dgHistory.Columns[ix].Width = 60;
                }
            }
        }

        private void dgLine_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            dgHistory.DataSource = _dsLine.Tables[0];
            dgHistory.Columns[0].HeaderText = "일자";
            for (int ix = 0; ix < dgHistory.Columns.Count; ix++)
            {
                dgHistory.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                dgHistory.Columns[ix].Width = 60;
            }
        }

        private void dgUpDownDay_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            dgUDDart.DataSource = null;
            dgUDCredit.DataSource = null;
            dgUDBuySell.DataSource = null;

            DataSet ds = new DataSet();
            ds.Tables.Add(GetDartApi(_stockCode, dgUpDownDay.Rows[e.RowIndex].Cells[CD일자.Index].Value.ToString()));
            ds.Tables.Add(GetCredit(_stockCode, dgUpDownDay.Rows[e.RowIndex].Cells[CD일자.Index].Value.ToString()));
            ds.Tables.Add(GetBuySell(_stockCode, dgUpDownDay.Rows[e.RowIndex].Cells[CD일자.Index].Value.ToString()));

            dgUDDart.DataSource = ds.Tables["DART"];
            for (int ix = 0; ix < ds.Tables["DART"].Columns.Count - 1; ix++)
            {
                
                if (ix == 3)
                {
                    dgUDDart.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft;
                    dgUDDart.Columns[ix].Width = 350;
                }
                else
                {
                    dgUDDart.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                    dgUDDart.Columns[ix].Width = 60;
                }
            }
            dgUDCredit.DataSource = ds.Tables["CREDIT"];
            for (int ix = 0; ix < _strCredit.Length; ix++)
            {
                dgUDCredit.Columns[ix].HeaderText = _strCredit[ix];
                dgUDCredit.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                dgUDCredit.Columns[ix].Width = 60;
            }
            dgUDBuySell.DataSource = ds.Tables["BUYSELL"];
            for (int ix = 0; ix < _strBuySell.Length; ix++)
            {
                dgUDBuySell.Columns[ix].HeaderText = _strBuySell[ix];
                dgUDBuySell.Columns[ix].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight;
                if (ix == 0) dgUDBuySell.Columns[ix].Width = 60;
                else dgUDBuySell.Columns[ix].Width = 40;

            }
        }
        private DataTable GetDartApi(string stockCode , string stockDate)
        {
            DataSet ds;
            string startDate;
            string endDate;
            ds = _DataAcc.p_stock_day_data_query("7", stockCode, stockDate, false);
            startDate = ds.Tables[0].Rows[0]["STOCK_DATE"].ToString();
            if (ds.Tables[1].Rows.Count < 1)
            {
                endDate = startDate;
            }
            else
            {
                endDate = ds.Tables[1].Rows[0]["STOCK_DATE"].ToString();
            }
            
            ds = Cls.Dart(stockCode, startDate, endDate);
            if (ds.Tables.Count == 1)
            {
                return new DataTable("DART");
            }
            ds.Tables[1].TableName = "DART";
            return ds.Tables[1].Copy();
        }
        private DataTable GetCredit(string stockCode, string stockDate)
        {
            DataSet ds;
            ds = _DataAcc.p_stock_credit_query("2", stockCode, stockDate, false);
            ds.Tables[0].TableName = "CREDIT";
            return ds.Tables[0].Copy();
        }
        private DataTable GetBuySell(string stockCode, string stockDate)
        {
            DataSet ds;
            ds = _DataAcc.p_stock_buysell_state_query("2", stockCode, stockDate, false, null);
            ds.Tables[0].TableName = "BUYSELL";
            return ds.Tables[0].Copy();
        }

        private void dgUDDart_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.ColumnIndex == 4) {
                System.Diagnostics.Process.Start("http://dart.fss.or.kr/dsaf001/main.do?rcpNo=" + dgUDDart.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString().Trim());
            }
        }
    }
}
