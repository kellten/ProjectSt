//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicTypeDescriptorApp.Properties {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DynamicTypeDescriptorApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
        ///   속성을 재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Venus&apos;s day.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Fri_Desc {
            get {
                return ResourceManager.GetString("Days_Fri_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Friday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Fri_Name {
            get {
                return ResourceManager.GetString("Days_Fri_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day of the Moon.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Mon_Desc {
            get {
                return ResourceManager.GetString("Days_Mon_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Monday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Mon_Name {
            get {
                return ResourceManager.GetString("Days_Mon_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Event will not reoccure.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_None_Desc {
            get {
                return ResourceManager.GetString("Days_None_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not selected과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_None_Name {
            get {
                return ResourceManager.GetString("Days_None_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only Saturday and Sunday.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_NoWork_Desc {
            get {
                return ResourceManager.GetString("Days_NoWork_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Weekend과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_NoWork_Name {
            get {
                return ResourceManager.GetString("Days_NoWork_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day of Saturn.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Sat_Desc {
            get {
                return ResourceManager.GetString("Days_Sat_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Saturday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Sat_Name {
            get {
                return ResourceManager.GetString("Days_Sat_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day of the sun.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Sun_Desc {
            get {
                return ResourceManager.GetString("Days_Sun_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sunday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Sun_Name {
            get {
                return ResourceManager.GetString("Days_Sun_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day of Jupiter.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Thr_Desc {
            get {
                return ResourceManager.GetString("Days_Thr_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Thursday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Thr_Name {
            get {
                return ResourceManager.GetString("Days_Thr_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day of Mars.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Tue_Desc {
            get {
                return ResourceManager.GetString("Days_Tue_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tuesday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Tue_Name {
            get {
                return ResourceManager.GetString("Days_Tue_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Day of Mercury.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Wed_Desc {
            get {
                return ResourceManager.GetString("Days_Wed_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Wednesday과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Wed_Name {
            get {
                return ResourceManager.GetString("Days_Wed_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All days except Saturday and Sunday.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Work_Desc {
            get {
                return ResourceManager.GetString("Days_Work_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Weekdays과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Days_Work_Name {
            get {
                return ResourceManager.GetString("Days_Work_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap ErrorState1 {
            get {
                object obj = ResourceManager.GetObject("ErrorState1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap ErrorState2 {
            get {
                object obj = ResourceManager.GetObject("ErrorState2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap HappyFace {
            get {
                object obj = ResourceManager.GetObject("HappyFace", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap OkFace {
            get {
                object obj = ResourceManager.GetObject("OkFace", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   It is negative.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Boolean_False_Desc {
            get {
                return ResourceManager.GetString("TestClass_Boolean_False_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Nep과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Boolean_False_Name {
            get {
                return ResourceManager.GetString("TestClass_Boolean_False_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is positive.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Boolean_True_Desc {
            get {
                return ResourceManager.GetString("TestClass_Boolean_True_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yep과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Boolean_True_Name {
            get {
                return ResourceManager.GetString("TestClass_Boolean_True_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enumeration features과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Cat1 {
            get {
                return ResourceManager.GetString("TestClass_Cat1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General features과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Cat2 {
            get {
                return ResourceManager.GetString("TestClass_Cat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image features과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Cat3 {
            get {
                return ResourceManager.GetString("TestClass_Cat3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard values usage과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Cat4 {
            get {
                return ResourceManager.GetString("TestClass_Cat4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expandable IEnumerable과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_Cat5 {
            get {
                return ResourceManager.GetString("TestClass_Cat5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The form is centered on the current display, and has the dimensions specified in the form&apos;s size.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_CenterParent_Desc {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_CenterParent_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center Parent과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_CenterParent_Name {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_CenterParent_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The form is positioned at the Windows default location and has the dimensions specified in the form&apos;s size.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_CenterScreen_Desc {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_CenterScreen_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Center Screen과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_CenterScreen_Name {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_CenterScreen_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The position of the form is determined by the Location property.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_Manual_Desc {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_Manual_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manual과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_Manual_Name {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_Manual_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The form is positioned at the Windows default location and has the bounds determined by Windows default.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_WindowsDefaultBounds_Desc {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_WindowsDefaultBounds_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Windows Default Bound과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_WindowsDefaultBounds_Name {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_WindowsDefaultBounds_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The form is centered within the bounds of its parent form과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_WindowsDefaultLocation_Desc {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_WindowsDefaultLocation_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Windows Default Location과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_FormStartPosition_WindowsDefaultLocation_Name {
            get {
                return ResourceManager.GetString("TestClass_FormStartPosition_WindowsDefaultLocation_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrates how to use enumeration without FlagsAttribute.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropA_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropA_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enum without Flags과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropA_Name {
            get {
                return ResourceManager.GetString("TestClass_PropA_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrates how to use enumeration with FlagsAttribute.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropB_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropB_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enum with Flags과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropB_Name {
            get {
                return ResourceManager.GetString("TestClass_PropB_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrates how to use booean as enumeration.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropC_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropC_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows &apos;No&apos; instead of &apos;False&apos;.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropC_False_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropC_False_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropC_False_Name {
            get {
                return ResourceManager.GetString("TestClass_PropC_False_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Boolean without True/False과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropC_Name {
            get {
                return ResourceManager.GetString("TestClass_PropC_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows &apos;Yes&apos; instead of &apos;True&apos;.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropC_True_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropC_True_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropC_True_Name {
            get {
                return ResourceManager.GetString("TestClass_PropC_True_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrates how to use built-in enumeration.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropD_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropD_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Built-in enumeration과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropD_Name {
            get {
                return ResourceManager.GetString("TestClass_PropD_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This property was created at run-time.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropE_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropE_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   On-the-fly property과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropE_Name {
            get {
                return ResourceManager.GetString("TestClass_PropE_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrate how to disable a property.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropF_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropF_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disabled property과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropF_Name {
            get {
                return ResourceManager.GetString("TestClass_PropF_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows image for the property value. Test values:  0, 1, 2, and 3.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropG_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropG_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Value image과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropG_Name {
            get {
                return ResourceManager.GetString("TestClass_PropG_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shows how you can show an state image for your property. Test values:  0, 1, 2, and 3.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropH_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropH_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   State image(s)과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropH_Name {
            get {
                return ResourceManager.GetString("TestClass_PropH_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrate the use of standard values.  This list is not exclusive, meaning you can type in the field.  Test values:  adam, brian, russel, jones, jakob, 101, 102, 103, 104, 105 and any integer value.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropI_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropI_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard value non-excluive과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropI_Name {
            get {
                return ResourceManager.GetString("TestClass_PropI_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrate the use of standard values.  This list is exclusive, meaning you can not type in the field. 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropJ_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropJ_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Standard value excluive과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropJ_Name {
            get {
                return ResourceManager.GetString("TestClass_PropJ_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrate the use of expandable list.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropK_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropK_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expandable list과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropK_Name {
            get {
                return ResourceManager.GetString("TestClass_PropK_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrate the use of expandable array.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropL_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropL_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expandable array과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropL_Name {
            get {
                return ResourceManager.GetString("TestClass_PropL_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Demonstrate the use of expandable collection.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropM_Desc {
            get {
                return ResourceManager.GetString("TestClass_PropM_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Expandable collection과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string TestClass_PropM_Name {
            get {
                return ResourceManager.GetString("TestClass_PropM_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
        /// </summary>
        internal static System.Drawing.Bitmap UnhappyFace {
            get {
                object obj = ResourceManager.GetObject("UnhappyFace", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
