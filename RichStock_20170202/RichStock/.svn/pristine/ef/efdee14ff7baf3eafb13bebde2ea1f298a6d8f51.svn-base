Imports System.Windows.Forms.DataVisualization.Charting

Imports PaikRichStock.Common

Public Class ucVolumeChartBase

    Private _ds As DataSet
    Private _ds2th As DataSet
    Private _clsFunc As New clsFunc
    Private _ColumeName As Struture_ColumnName

    Public WriteOnly Property Ds As DataSet
        Set(value As DataSet)
            _ds = value
            DisplayChart()
        End Set
    End Property

    Public WriteOnly Property Ds2th As DataSet
        Set(value As DataSet)
            _ds2th = value
        End Set
    End Property

    Public WriteOnly Property ColumeName As Struture_ColumnName
        Set(value As Struture_ColumnName)
            _ColumeName.Init()
            _ColumeName = value
        End Set
    End Property

    Public Structure Struture_ColumnName
        Public VolumeSumName As String
        Public AvgPriceSum As String
        Public Title As String
        Public DistributeVolume As String

        Public Sub Init()
            VolumeSumName = ""
            AvgPriceSum = ""
            Title = ""
            DistributeVolume = ""
        End Sub
    End Structure

    Private Sub DisplayChart()

        Dim intPoint As Integer = 0
        Dim high As Integer = 0
        Dim close As Integer = 0
        Dim low As Integer = 0

        With chartBase
            For j As Integer = 0 To .Series.Count - 1
                .Series(j).Points.Clear()
            Next

            .Titles(0).Text = _ColumeName.Title

            .Series("Price").ChartType = SeriesChartType.Candlestick

            For i As Integer = _ds.Tables(0).Rows.Count - 1 To 0 Step -1
                If high = 0 Then

                    high = Math.Abs(_ds.Tables(0).Rows(i).Item("고가"))

                Else

                    If high < Math.Abs(_ds.Tables(0).Rows(i).Item("고가")) Then
                        high = Math.Abs(_ds.Tables(0).Rows(i).Item("고가"))
                    End If

                End If

                If low = 0 Then
                    low = Math.Abs(_ds.Tables(0).Rows(i).Item("저가"))
                Else
                    If Math.Abs(_ds.Tables(0).Rows(i).Item("저가")) <> 0 Then
                        If low > Math.Abs(_ds.Tables(0).Rows(i).Item("저가")) Then
                            low = Math.Abs(_ds.Tables(0).Rows(i).Item("저가"))
                        End If
                    End If
                End If

                .Series("Price").Points.AddXY(CDate(CDateTime.FormatDate(_ds.Tables(0).Rows(i).Item("일자"), ".")), Math.Abs(_ds.Tables(0).Rows(i).Item("고가")))
                .Series("Price2").Points.AddXY(CDate(CDateTime.FormatDate(_ds.Tables(0).Rows(i).Item("일자"), ".")), Math.Abs(_ds.Tables(0).Rows(i).Item("고가")))

                .Series("VolumeSum").Points.AddXY(CDate(CDateTime.FormatDate(_ds.Tables(0).Rows(i).Item("일자"), ".")), _ds.Tables(0).Rows(i).Item(_ColumeName.VolumeSumName).ToString())

                If CInt(_ds.Tables(0).Rows(i).Item(_ColumeName.VolumeSumName)) = 0 Then
                    .Series("AvgPrice").Points.AddXY(CDate(CDateTime.FormatDate(_ds.Tables(0).Rows(i).Item("일자"), ".")), 0)
                Else
                    .Series("AvgPrice").Points.AddXY(CDate(CDateTime.FormatDate(_ds.Tables(0).Rows(i).Item("일자"), ".")), _
                                                   _ds.Tables(0).Rows(i).Item(_ColumeName.AvgPriceSum).ToString() / _
                                                   _ds.Tables(0).Rows(i).Item(_ColumeName.VolumeSumName).ToString() * 1000000)
                End If

                .Series("Price").Points(intPoint).YValues(1) = Math.Abs(_ds.Tables(0).Rows(i).Item("저가"))
                .Series("Price").Points(intPoint).YValues(2) = Math.Abs(_ds.Tables(0).Rows(i).Item("시가"))
                .Series("Price").Points(intPoint).YValues(3) = Math.Abs(_ds.Tables(0).Rows(i).Item("현재가"))

                .Series("Price2").Points(intPoint).YValues(1) = Math.Abs(_ds.Tables(0).Rows(i).Item("저가"))
                .Series("Price2").Points(intPoint).YValues(2) = Math.Abs(_ds.Tables(0).Rows(i).Item("시가"))
                .Series("Price2").Points(intPoint).YValues(3) = Math.Abs(_ds.Tables(0).Rows(i).Item("현재가"))
                .Series("Distri").Points.AddXY(CDate(CDateTime.FormatDate(_ds.Tables(0).Rows(i).Item("일자"), ".")), _ds.Tables(0).Rows(i).Item(_ColumeName.DistributeVolume))
                intPoint = intPoint + 1
            Next

            .ChartAreas("Volume").AxisY.Minimum = CInt(low - (low * 0.1))
            .ChartAreas("Volume").AxisY.Maximum = CInt(high + (high * 0.1))
            .ChartAreas("Volume").AxisX.IsLabelAutoFit = True

            .ChartAreas("DistVolume").AxisY.Minimum = CInt(low - (low * 0.1))
            .ChartAreas("DistVolume").AxisY.Maximum = CInt(high + (high * 0.1))
            .ChartAreas("DistVolume").AxisY2.Maximum = 100
            .ChartAreas("DistVolume").AxisY2.Minimum = 0
            .ChartAreas("DistVolume").AxisX.IsLabelAutoFit = True
            .DataManipulator.IsStartFromFirst = True
            .DataManipulator.FinancialFormula(FinancialFormula.MovingAverage, "20", "Price:Y3", "MA")
            .Series("MA").ChartArea = "Volume"
            .Series("MA").ChartType = SeriesChartType.Line
            .Series("MA").BorderWidth = 2
            .Series("MA").ShadowOffset = 1
            .Series("MA").IsVisibleInLegend = False

            .Invalidate()

        End With
    End Sub

End Class
