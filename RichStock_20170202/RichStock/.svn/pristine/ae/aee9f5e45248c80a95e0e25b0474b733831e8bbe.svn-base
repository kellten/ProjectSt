Imports PaikRichStock.Common
Imports System.IO

Public Class frmStockVolumeScriptToXml_Ver2
    Private _MainStock As New PaikRichStock.Common.ucMainStockVer2
    Private _clsCombineCallOpt As New clsCombineCallOpt

    Sub New(ByVal mainStock As ucMainStockVer2)

        ' 이 호출은 디자이너에 필요합니다.
        InitializeComponent()

        ' InitializeComponent() 호출 뒤에 초기화 코드를 추가하십시오.

        _MainStock = mainStock
        UcFavList1.MainStock2 = mainStock
        _clsCombineCallOpt.MainStock = mainStock
        AddHandler _clsCombineCallOpt.OnEventCombineOpt5981, AddressOf OnEventCombineOpt5981

        'AddHandler _clsCombineCallOpt.OnEventCombineMsg, AddressOf OnEventCombineMsg
    End Sub

    Private Enum dgvIndex
        StockName
        StockCode
        JobGb
    End Enum

    Private _dtOpt10059 As New DataTable        ' 종목별투자자기관별요청
    Private _dtOpt10059Price As New DataTable   ' 종목별투자자기관별요청(금액)
    Private _dtOpt10081 As New DataTable        ' 주식일봉차트조회

    Private _FILTERSTR As String = "STOCK_CODE <> '' AND STOCK_NAME NOT LIKE '%ETN%' AND STOCK_NAME NOT LIKE '%선물%'  AND STOCK_NAME NOT LIKE '트러스%'  AND STOCK_NAME NOT LIKE 'KBSTAR%' AND STOCK_NAME NOT LIKE '하이골드%' AND STOCK_NAME NOT LIKE 'KINDEX%'  AND STOCK_NAME NOT LIKE 'KOSEF%'   AND STOCK_NAME NOT LIKE '하나니켈%'   AND STOCK_NAME NOT LIKE 'TREX%' AND STOCK_NAME NOT LIKE '코리아0%' AND STOCK_NAME NOT LIKE '동북아%'  AND STOCK_NAME NOT LIKE '아시아 %' AND STOCK_NAME NOT LIKE '%우B' AND STOCK_NAME NOT LIKE '%1호' AND STOCK_NAME NOT LIKE '%2호' AND STOCK_NAME NOT LIKE '%K' AND STOCK_NAME NOT LIKE '%채권%' AND STOCK_NAME NOT LIKE '%신탁%' AND STOCK_NAME NOT LIKE '%TIGER%' AND STOCK_NAME NOT LIKE '%KODEX%' AND STOCK_NAME NOT LIKE '%KINDEX%' AND STOCK_NAME NOT LIKE '%ARIRANG%' AND STOCK_NAME NOT LIKE '%(합성%'"

#Region " SetInitControl "
    Private Sub SetInitControl(ByVal ds As DataSet)
        With dgvList
            .Rows.Clear()
            .RowCount = ds.Tables(0).Rows.Count

            Dim row As Integer = 0

            For Each dr In ds.Tables(0).Rows
                If Trim(dr("STOCK_CODE").ToString) = "" Then Continue For

                .Rows.Item(row).Cells(dgvIndex.StockName).Value = Trim(dr("STOCK_NAME"))
                .Rows.Item(row).Cells(dgvIndex.StockCode).Value = Trim(dr("STOCK_CODE"))
                .Rows.Item(row).Cells(dgvIndex.JobGb).Value = ""

                row = row + 1

            Next
        End With

        proBar.Minimum = 0
        proBar.Maximum = ds.Tables(0).Rows.Count

    End Sub
#End Region

#Region " GetVolumeData "
    Private Sub GetVolumeData()
        Dim strStockCode As String = ""
        Dim strName As String = ""
        With dgvList
            For i As Integer = 0 To dgvList.Rows.Count - 1
                If Trim(.Rows(i).Cells(dgvIndex.StockCode).Value) = "" Then Exit For

                strName = Trim(.Rows(i).Cells(dgvIndex.StockName).Value)

                If strName.Contains("ETN") And strName.Contains("선물") And strName.Contains("트러스") And strName.Contains("KBSTAR") And strName.Contains("하이골드") And strName.Contains("KINDEX") And strName.Contains("KOSEF") And strName.Contains("하나니켈") And strName.Contains("TREX") And strName.Contains("코리아0") And strName.Contains("동북아") And strName.Contains("아시아 ") And strName.Contains("우B") And strName.Contains("1호") And strName.Contains("2호") And strName.Contains("K") And strName.Contains("채권") And strName.Contains("신탁") And strName.Contains("TIGER") And strName.Contains("KODEX") And strName.Contains("KINDEX") And strName.Contains("ARIRANG") And strName.Contains("합성") Then
                    .Rows(i).Cells(dgvIndex.JobGb).Value = "Y"
                    proBar.Value = proBar.Value + 1
                    Continue For
                End If

                'If Trim(.Rows(i).Cells(dgvIndex.StockName).Value) = "핸즈코퍼레이션" Then
                '    .Rows(i).Cells(dgvIndex.JobGb).Value = "Y"
                '    proBar.Value = proBar.Value + 1
                '    Continue For
                'End If

                If Mid(Trim(.Rows(i).Cells(dgvIndex.StockName).Value), Trim(.Rows(i).Cells(dgvIndex.StockName).Value).Length, 1) = "우" And Trim(.Rows(i).Cells(dgvIndex.StockName).Value) <> "동우" Then
                    .Rows(i).Cells(dgvIndex.JobGb).Value = "Y"
                    proBar.Value = proBar.Value + 1
                    Continue For
                End If

                If File.Exists("C:\Xml2\" & Trim(.Rows(i).Cells(dgvIndex.StockCode).Value) & "_" & Trim(.Rows(i).Cells(dgvIndex.StockName).Value) & ".xml") = True Then
                    .Rows(i).Cells(dgvIndex.JobGb).Value = "Y"
                    proBar.Value = proBar.Value + 1
                    Continue For
                End If

                If strStockCode = "" Then
                    strStockCode = Trim(.Rows(i).Cells(dgvIndex.StockCode).Value) & ";"
                Else
                    strStockCode = strStockCode & Trim(.Rows(i).Cells(dgvIndex.StockCode).Value) & ";"
                End If

            Next
        End With

        If strStockCode = "" Then
            MsgBox("작업 할 내역이 없습니다.")
            Exit Sub
        End If

        CallOpt(clsFunc.FirstCallSequnceOpt(strStockCode, ";"))

    End Sub

    Private _stockCode As String = ""

    Private Sub CallOpt(ByVal stockCode As String)
        If stockCode = "STOP" Then
            MsgBox("작업이 완료 되었습니다.", MsgBoxStyle.Information)
            Exit Sub
        End If

        lblMsg.Text = ""
        _stockCode = stockCode
        lblMsg.Text = _stockCode & "작업 진행..."
        GC.Collect()
        _stockCode = stockCode
        _clsCombineCallOpt.GetOpt10081(stockCode)

    End Sub
#End Region

    Private Sub OnEventCombineMsg(ByVal msg As String)
        lblMsg.Text = msg
    End Sub

    Private Sub OnEventCombineOpt5981(ByVal dt As DataTable)
        dt.TableName = _stockCode & "_" & Trim(_MainStock.GetStockInfo(_stockCode))
        dt.WriteXml("C:\Xml2\" & dt.TableName & ".xml")
        dt.WriteXmlSchema("C:\Xml2\" & dt.TableName & ".xsd")

        With dgvList
            For i As Integer = 0 To .Rows.Count - 1
                If Trim(.Rows(i).Cells(dgvIndex.StockCode).Value) = _stockCode Then
                    .Rows(i).Cells(dgvIndex.JobGb).Value = "Y"
                    Exit For
                End If
            Next

            proBar.Value = proBar.Value + 1

            CallOpt(clsFunc.NextCallSequnceOpt())

        End With
    End Sub

    Private Sub btnStart_Click(sender As Object, e As EventArgs) Handles btnStart.Click
        GetVolumeData()
    End Sub

    Private Sub btnAll_Click(sender As Object, e As EventArgs) Handles btnAll.Click
        SetInitControl(_MainStock._allStockDataset)
    End Sub

    Private Sub btnFav_Click(sender As Object, e As EventArgs) Handles btnFav.Click
        SetInitControl(UcFavList1.ReturnFavDs)
    End Sub
  
End Class